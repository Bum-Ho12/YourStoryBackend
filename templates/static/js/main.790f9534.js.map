{"version":3,"file":"static/js/main.790f9534.js","mappings":"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","sources":["lib/utils/dimensions.js","lib/utils/state-context.js","lib/utils/app-styles.js","lib/utils/urls.js","lib/components/blog-content.js","lib/components/blog-card.js","lib/components/bottom-side.js","lib/screens/home.js","lib/screens/blogs.js","lib/components/formInput.js","lib/components/credentialsFormComponent.js","lib/screens/subscription.js","lib/components/navigation-bar.js","lib/screens/blog-read.js","lib/screens/linker.js","lib/components/progress-indicator.js","lib/screens/login.js","lib/screens/create-post.js","lib/components/blog-preview-component.js","lib/screens/blog-preview.js","lib/screens/register-screen.js","lib/components/execute-card.js","lib/screens/author-blogs.js","lib/navigation.js","App.js","webpack/bootstrap","webpack/runtime/chunk loaded","webpack/runtime/compat get default export","webpack/runtime/define property getters","webpack/runtime/global","webpack/runtime/hasOwnProperty shorthand","webpack/runtime/make namespace object","webpack/runtime/publicPath","webpack/runtime/jsonp chunk loading","webpack/startup"],"sourcesContent":["import { Dimensions } from \"react-native\"\r\n\r\nexport const windowWidth = Dimensions.get('window').width\r\nexport const windowHeight = Dimensions.get('window').height","import React,{useState,useContext,createContext,useEffect} from 'react'\r\nimport * as Font from 'expo-font'\r\n// import { AsyncStorage } from 'react-native'\r\n\r\n\r\nexport const ThemeContext = createContext()\r\n\r\nexport const ColorThemeProvider = ({children})=>{\r\n    const [roboFont,setRoboFont] = useState({\r\n        'roboto-bold': null,\r\n        'roboto-italic': null,\r\n        'roboto-regular': null,\r\n        'roboto-medium':null,\r\n    })\r\n    const [darkTheme,setDarkTheme] = useState(false)\r\n    const [token,setToken] = useState('')\r\n    const [author,setAuthor] = useState('')\r\n    const [emailAccess,setEmailAccess] = useState('')\r\n    const toggleTheme = () => {\r\n        setDarkTheme(prevTheme => !prevTheme)\r\n    }\r\n    const [isFontsLoaded, setIsFontsLoaded] = useState(false)\r\n\r\n    const fetchFonts = async () => {\r\n        await Font.loadAsync({\r\n            'roboto-bold': require('../../assets/fonts/Roboto-Bold.ttf'),\r\n            'roboto-italic': require('../../assets/fonts/Roboto-Italic.ttf'),\r\n            'roboto-regular': require('../../assets/fonts/Roboto-Regular.ttf'),\r\n            'roboto-medium': require('../../assets/fonts/Roboto-Medium.ttf'),\r\n        })\r\n    }\r\n\r\n    const loadFonts = async () => {\r\n        try {\r\n            await fetchFonts();\r\n            setIsFontsLoaded(true)\r\n            setRoboFont({\r\n                'roboto-bold': require('../../assets/fonts/Roboto-Bold.ttf'),\r\n                'roboto-italic': require('../../assets/fonts/Roboto-Italic.ttf'),\r\n                'roboto-regular': require('../../assets/fonts/Roboto-Regular.ttf'),\r\n                'roboto-medium': require('../../assets/fonts/Roboto-Medium.ttf'),\r\n            })\r\n        } catch (error) {\r\n            console.error('Error loading fonts', error)\r\n        }\r\n    };\r\n    const checkToken = async () => {\r\n        try{\r\n            if (typeof window !== 'undefined' && window.localStorage) {\r\n                // We are in a web environment\r\n                const storedToken = localStorage.getItem('userToken')\r\n                const storedAuthor = localStorage.getItem('author')\r\n                const storedEmail = localStorage.getItem('email')\r\n\r\n                if (storedToken) {\r\n                    setToken(storedToken)\r\n                    setAuthor(storedAuthor)\r\n                    setEmailAccess(storedEmail)\r\n                }\r\n            }\r\n        }catch(err){\r\n            console.log(err)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        loadFonts()\r\n        checkToken()\r\n      }, []); // Run only once when the component mounts\r\n\r\n    if (!isFontsLoaded) {\r\n        // Fonts are still loading, show AppLoading\r\n        return null\r\n    }\r\n\r\n    return(\r\n        <ThemeContext.Provider value={{\r\n            darkTheme,setDarkTheme,\r\n            toggleTheme,\r\n            token,setToken,\r\n            author,setAuthor,\r\n            emailAccess,setEmailAccess,\r\n            }}>\r\n            {children}\r\n        </ThemeContext.Provider>\r\n    )\r\n}\r\n\r\nexport const useTheme = () =>{\r\n    return useContext(ThemeContext)\r\n}","import { StyleSheet } from \"react-native\"\r\nimport { windowHeight, windowWidth } from \"./dimensions\"\r\nimport { useTheme } from \"./state-context\"\r\n\r\n\r\nexport const SafeAreaViewStyle = ()=>{\r\n    const {darkTheme} = useTheme()\r\n    const styles = StyleSheet.create({\r\n        container:{backgroundColor: darkTheme?'#121212':'#ffffff',}\r\n    })\r\n    return styles\r\n}\r\n\r\nexport const ProgressIndicatorStyle = ()=>{\r\n    const styles = StyleSheet.create({\r\n        container: {\r\n            flex: 1,\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n            backgroundColor: '#fff',\r\n        },\r\n    })\r\n    return styles\r\n}\r\n\r\nexport const CredentialFormStyle= ()=>{\r\n    const {roboFont,darkTheme} = useTheme()\r\n    const styles = StyleSheet.create({\r\n        container: {\r\n            alignItems: 'flex-start',\r\n            marginTop:5,\r\n            marginBottom: 5,\r\n            width: 300,\r\n            borderColor: 'transparent',\r\n            borderRadius: 10,\r\n            borderWidth: 1,\r\n            flexDirection: 'column',\r\n            backgroundColor: darkTheme?'#121212':'#ffffff',\r\n        },\r\n        titleStyle:{\r\n            padding: 10,\r\n            fontSize: 18,\r\n            fontFamily:'roboto-bold',\r\n            fontWeight: 'bold',\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n            // borderRightColor: '#ccc',\r\n            // borderRightWidth: 1,\r\n            width: 150,\r\n            color: darkTheme?'#F6FAF8':'#121212',\r\n        },\r\n        text: {\r\n            padding: 10,\r\n            flex: 1,\r\n            fontSize: 16,\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n            color: darkTheme?'#F6FAF8':'#121212',\r\n            fontFamily:'roboto-medium',\r\n        },\r\n        inputField: {\r\n            padding: 10,\r\n            marginTop: 5,\r\n            marginBottom: 5,\r\n            width: 290,\r\n            fontSize: 16,\r\n            borderRadius: 8,\r\n            borderWidth: 0,\r\n            backgroundColor:darkTheme?'#F0F0F0':'rgba(0, 0, 0, 0.1)',\r\n            fontFamily:'roboto-medium',\r\n        }\r\n    })\r\n    return styles\r\n}\r\n\r\nexport const NavigationBarStyle =()=>{\r\n    const {roboFont,darkTheme} = useTheme()\r\n    const styles = StyleSheet.create({\r\n        wrapper: {\r\n            flexDirection: windowWidth>600?'row':'column',\r\n            alignContent:'center',\r\n            alignItems: 'center',\r\n            paddingHorizontal: windowWidth>400?50:10,\r\n            paddingVertical: 10,\r\n            backgroundColor: darkTheme?'#121212':'#ffffff',\r\n            color: '#35547b',\r\n            boxShadow: '0px 2px 4px rgba(0, 0, 0, 0.1)',\r\n\r\n        },\r\n        titleWrapper: {\r\n            flexWrap: true,\r\n        },\r\n        btnWrapper:{\r\n            flexDirection:'row'\r\n        },\r\n        btn:{\r\n            paddingHorizontal:windowWidth>600?10:5,\r\n            paddingVertical: windowWidth>600?5: 3,\r\n            // color: '#35547b',\r\n            // backgroundColor:'#35547b',\r\n            backgroundColor: darkTheme?'#121212':'#ffffff',\r\n            margin: windowWidth>400?7:5,\r\n            borderRadius: 20,\r\n            alignItems: 'center',\r\n            // width: windowWidth>400?130:100,\r\n        },\r\n        btnLogin:{\r\n            // marginTop: windowWidth>400 ?10:5,\r\n            borderRadius: 20,\r\n            backgroundColor:'#63bde1',\r\n            paddingHorizontal:windowWidth>400?20:10,\r\n            paddingVertical: windowWidth>400?5: 3,\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n            height: 40,\r\n        },\r\n        dropdownMenu: {\r\n            position: 'absolute',\r\n            top: 40,\r\n            right: 0,\r\n            backgroundColor: '#fff',\r\n            zIndex: 1,\r\n            borderWidth: 1,\r\n            borderColor: '#ccc',\r\n            width: 150,\r\n        },\r\n        dropdownMenuItem: {\r\n            padding: 10,\r\n            borderBottomWidth: 1,\r\n            borderBottomColor: '#ccc',\r\n        },\r\n        dropdownMenuItemText: {\r\n            color: '#63bde1',\r\n            fontWeight:'200',\r\n            fontFamily: 'roboto-regular',\r\n            fontSize: 16\r\n        },\r\n        divider:{\r\n            borderBottomWidth: 2,\r\n            borderBottomColor: '#A1CADA',\r\n        },\r\n        activeBtnLine: {\r\n            borderBottomWidth: 2,\r\n            borderBottomColor: darkTheme ? '#ffffff' : '#121212',\r\n            marginTop: 2,\r\n            borderRadius: 5,\r\n        },\r\n        title:{\r\n            fontSize: 24,\r\n            fontWeight: 'bold',\r\n            color: '#63bde1',\r\n            fontFamily: 'roboto-bold'\r\n        },\r\n        btnText:{\r\n            fontSize: 18,\r\n            fontWeight: '400',\r\n            color: '#7DA9BB',\r\n        },\r\n        activeBtnText:{\r\n            fontSize: 20,\r\n            fontWeight: '600',\r\n            color: darkTheme?'#ffffff':'#121212',\r\n        },\r\n        textLogin:{\r\n            fontFamily: 'roboto-regular',\r\n            color: '#ffffff',\r\n            fontSize: 20,\r\n            fontWeight:'400'\r\n        },\r\n    })\r\n    return styles\r\n}\r\n\r\n\r\nexport const LoginStyle= ()=>{\r\n    const {roboFont,darkTheme} = useTheme()\r\n    const styles = StyleSheet.create({\r\n        topContainer:{\r\n            alignItems:'center',\r\n            alignContent: 'space-around',\r\n            backgroundColor: darkTheme?'rgba(0, 0, 0, 0.9)': '#F6FAF8',\r\n            // width: windowWidth* 0.8\r\n        },\r\n        container:{\r\n            alignContent: 'center',\r\n            // flex: 1,\r\n            alignItems: 'center',\r\n            // width: windowWidth,\r\n            paddingHorizontal: 10,\r\n        },\r\n        boxContainer:{\r\n            borderRadius: 20,\r\n            // height: 320,\r\n            color: '#fff',\r\n            backgroundColor:darkTheme?'#121212':'#fff',\r\n            padding: 5,\r\n            marginBottom: 10,\r\n            marginTop: 5,\r\n            alignItems: 'center',\r\n        },\r\n        textContainer:{\r\n            alignItems: 'center',\r\n            alignContent: 'center',\r\n            padding: 10,\r\n            borderRadius: 20,\r\n            height: 100,\r\n            color: darkTheme?'#121212':'#fff',\r\n            backgroundColor:darkTheme?'#121212':'#fff',\r\n            marginBottom: 6,\r\n            marginTop: 5,\r\n        },\r\n        titleWrapper: {\r\n            flexWrap: true,\r\n        },\r\n        title:{\r\n            fontSize: 24,\r\n            fontWeight: 'bold',\r\n            color: '#63bde1',\r\n            fontFamily: 'roboto-bold'\r\n        },\r\n        btn:{\r\n            color: '#fff',\r\n            marginTop: windowWidth>600 ?10:5,\r\n            borderRadius: 20,\r\n            backgroundColor:'#63bde1',\r\n            padding: 10,\r\n            alignItems: 'center',\r\n            width: 100,\r\n        },\r\n        textDesc:{\r\n            fontSize: 14,\r\n            fontStyle: 'italic',\r\n            fontFamily:'roboto-italic',\r\n            marginTop: 10,\r\n            color: darkTheme?'#ffffff':'#121212',\r\n        },\r\n        text: {\r\n            fontWeight: 'bold',\r\n            fontSize: 16,\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n            color: darkTheme?'#ffffff':'#121212',\r\n            fontFamily:'roboto-regular',\r\n        },\r\n        registerText:{\r\n            fontFamily: 'roboto-italic',\r\n            fontSize: 16,\r\n            justifyContent: 'center',\r\n            color: '#63bde1',\r\n            fontWeight: '400'\r\n        }\r\n    })\r\n    return styles\r\n}\r\n\r\n\r\n// handles home styling\r\nexport const HomeStyle  = ()=>{\r\n    const {roboFont,darkTheme} = useTheme()\r\n    const styles = StyleSheet.create({\r\n        container:{\r\n            flex:1,\r\n            alignItems:'center',\r\n            backgroundColor: darkTheme?'#121212':'#ffffff',\r\n            // paddingLeft: 15,\r\n            // paddingRight:15,\r\n        },\r\n        trendingWrapper:{\r\n            flexDirection:'column',\r\n            padding: 10,\r\n            alignItems: 'space-between',\r\n            alignContent: 'space-around',\r\n            width: windowWidth>1000? 900: windowWidth>800?700:350,\r\n        },\r\n        latestText:{\r\n            fontSize:windowWidth>800? 24:20,\r\n            color:'#63bde1',\r\n            fontWeight:'bold',\r\n            fontFamily:'roboto-regular',\r\n            margin: 15,\r\n        },\r\n        trendingText:{\r\n            fontSize:windowWidth>800? 20:14,\r\n            color:'#63bde1',\r\n            fontWeight:'bold',\r\n            fontFamily:'roboto-bold',\r\n            margin: 15,\r\n        },\r\n        dateTimeWrapper:{\r\n            flexDirection: 'row',\r\n            padding:10\r\n        },\r\n        timeText:{\r\n            fontSize: windowWidth>800? 14:12,\r\n            fontWeight: 'bold',\r\n            color: darkTheme?'#ffffff':'#121212',\r\n            marginRight: 10,\r\n            fontFamily: 'roboto-italic'\r\n        },\r\n        dateText:{\r\n            fontSize: windowWidth>800? 14:12,\r\n            fontWeight: 'bold',\r\n            color: darkTheme?'#ffffff':'#121212',\r\n            fontFamily: 'roboto-italic'\r\n        },\r\n        btnWrapper:{\r\n            padding: 10,\r\n            margin: 10,\r\n            alignItems: 'center',\r\n            justifyContent: 'center'\r\n        },\r\n        btn:{\r\n            padding: 10,\r\n            color: '#E1EFF5',\r\n            backgroundColor:'#E1EFF5',\r\n            margin: 10,\r\n            borderRadius: 10,\r\n            alignItems: 'center',\r\n            justifyContent: 'center'\r\n        },\r\n        title:{\r\n            fontSize: 20,\r\n            fontWeight:'bold',\r\n            color:'#63bde1',\r\n            fontFamily: 'roboto-bold'\r\n        },\r\n        contentTitle:{\r\n            fontSize: 14,\r\n            fontWeight: 'bold',\r\n        },\r\n        contentTxt:{\r\n            fontSize: 13,\r\n            color: '#63bde1',\r\n            fontWeight: 'bold',\r\n        },\r\n        trendingTitle:{\r\n            fontSize: 20,\r\n            fontWeight: 'bold',\r\n            color: '#63bde1',\r\n            padding: 10,\r\n            fontFamily: 'roboto-regular'\r\n        },\r\n        preText:{\r\n            fontSize: 16,\r\n            fontWeight: 'bold',\r\n            fontFamily: 'roboto-medium'\r\n        },\r\n        btnText:{\r\n            fontSize: 16,\r\n            fontWeight: 'bold',\r\n            color: '#63bde1',\r\n            fontFamily: 'roboto-regular'\r\n        }\r\n    })\r\n    return styles\r\n}\r\n\r\nexport const BlogsStyle =()=> {\r\n    const {roboFont,darkTheme} = useTheme()\r\n    const  styles = StyleSheet.create({\r\n        starter:{\r\n            // flex:1,\r\n            // height: 400\r\n        },\r\n        backgroundImage:{\r\n            // flex:1,\r\n            resizeMode: 'contain',\r\n            justifyContent:'center',\r\n            height: 400\r\n        },\r\n        overlay: {\r\n            ...StyleSheet.absoluteFillObject,\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n        },\r\n        container:{\r\n            flex:1,\r\n            alignItems:'center',\r\n            backgroundColor: darkTheme?'#121212':'#ffffff',\r\n            paddingLeft: 15,\r\n            paddingRight:15,\r\n        },\r\n        trendingWrapper:{\r\n            // flex:2,\r\n            flexDirection:'column',\r\n            padding: 10,\r\n            alignItems: 'space-between',\r\n            alignContent: 'space-around',\r\n            width: windowWidth>1000? 900: windowWidth>800?700:350,\r\n        },\r\n        btn:{\r\n            color: '#fff',\r\n            marginTop: windowWidth>400 ?20:10,\r\n            borderRadius: 20,\r\n            backgroundColor:'#63bde1',\r\n            padding: 10,\r\n            alignItems: 'center',\r\n            // width: 100,\r\n        },\r\n        text: {\r\n            fontWeight: 'bold',\r\n            fontSize: 16,\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n            color: '#ffffff',\r\n            fontFamily: 'roboto-regular'\r\n        },\r\n        trendingText:{\r\n            fontSize:20,\r\n            color:'##121212',\r\n            fontWeight:'bold',\r\n            fontFamily: 'roboto-regular',\r\n            margin: 15,\r\n        },\r\n        titleText:{\r\n            fontFamily: 'roboto-bold',\r\n            fontSize: windowWidth> 600?36: 30,\r\n            color: '#ffffff',\r\n            flexWrap: true,\r\n            width: windowWidth *0.4\r\n        },\r\n        preText:{\r\n            fontFamily: 'roboto-italic',\r\n            fontSize: windowWidth> 600?25: 20,\r\n            color: '#ffffff',\r\n            width: windowWidth *0.4\r\n            // justifyContent: 'center'\r\n        },\r\n    })\r\n    return styles\r\n}\r\n\r\nexport const SubscriptionStyle = ()=>{\r\n    const {darkTheme} = useTheme()\r\n    const styles = StyleSheet.create({\r\n        topContainer:{\r\n            // alignItems:'center',\r\n            // alignContent: 'center',\r\n            backgroundColor: darkTheme?'rgba(0, 0, 0, 0.9)': '#F6FAF8',\r\n            // width: windowWidth,\r\n        },\r\n        container:{\r\n            alignContent: 'center',\r\n            // flex: 1,\r\n            alignItems: 'center',\r\n            backgroundColor: darkTheme?'#121212': '#fff',\r\n        },\r\n        boxContainer:{\r\n            borderRadius: 10,\r\n            height: 320,\r\n            color: '#fff',\r\n            backgroundColor:darkTheme?'rgba(0, 0, 0, 0.9)':'#F6FAF8',\r\n            padding: 5,\r\n            marginBottom: 10,\r\n            marginTop: 5,\r\n            alignItems: 'center',\r\n        },\r\n        textContainer:{\r\n            alignItems: 'center',\r\n            alignContent: 'center',\r\n            padding: 10,\r\n            borderRadius: 20,\r\n            height: windowWidth> 800? 150: 100,\r\n            color: darkTheme?'#121212':'#fff',\r\n            backgroundColor:darkTheme?'#121212':'#fff',\r\n            marginBottom: 6,\r\n            marginTop: 5,\r\n        },\r\n        titleWrapper: {\r\n            flexWrap: true,\r\n        },\r\n        title:{\r\n            fontSize: 24,\r\n            fontWeight: 'bold',\r\n            color: '#63bde1',\r\n            fontFamily: 'roboto-regular'\r\n        },\r\n        btn:{\r\n            color: '#fff',\r\n            marginTop: windowWidth>600 ?10:5,\r\n            borderRadius: 20,\r\n            backgroundColor:'#63bde1',\r\n            padding: 10,\r\n            alignItems: 'center',\r\n            width: 100,\r\n        },\r\n        textDesc:{\r\n            fontSize: 14,\r\n            fontStyle: 'italic',\r\n            fontFamily: 'roboto-italic',\r\n            marginTop: 10,\r\n            color: darkTheme?'#ffffff':'#121212',\r\n        },\r\n        text: {\r\n            fontWeight: 'bold',\r\n            fontSize: 16,\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n            color: darkTheme?'#ffffff':'#121212',\r\n            fontFamily: 'roboto-regular'\r\n        },\r\n    })\r\n\r\n    return styles\r\n}\r\n\r\n\r\nexport const FormStyle= ()=>{\r\n    const {darkTheme} = useTheme()\r\n    const styles = StyleSheet.create({\r\n        container: {\r\n            alignItems: 'flex-start',\r\n            marginTop:5,\r\n            marginBottom: 5,\r\n            width: windowWidth*0.5,\r\n            borderColor: 'transparent',\r\n            borderRadius: 10,\r\n            borderWidth: 1,\r\n            flexDirection: 'column',\r\n            backgroundColor: darkTheme?'#121212':'#fff'\r\n        },\r\n        titleStyle:{\r\n            padding: 10,\r\n            fontSize: 18,\r\n            fontWeight: 'bold',\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n            width: windowWidth*0.45,\r\n            color: darkTheme?'#F6FAF8':'#121212',\r\n        },\r\n        text: {\r\n            padding: 10,\r\n            flex: 1,\r\n            fontSize: 16,\r\n            fontFamily: 'roboto-regular',\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n            color: darkTheme?'#ffffff':'#121212',\r\n        },\r\n        inputField: {\r\n            padding: 10,\r\n            marginTop: 5,\r\n            marginBottom: 5,\r\n            width: windowWidth> 600?windowWidth*0.45: windowWidth*0.5,\r\n            fontSize: 16,\r\n            borderRadius: 8,\r\n            borderWidth: 0,\r\n            backgroundColor: darkTheme?'#F0F0F0':'#ffffff',\r\n            fontFamily: 'roboto-medium'\r\n        }\r\n    })\r\n\r\n    return styles\r\n}\r\n\r\nexport const BlogCardStyle =()=>{\r\n    const {darkTheme} = useTheme()\r\n    const styles = StyleSheet.create({\r\n        container:{\r\n            flex: 1,\r\n            // padding: 5,\r\n            marginHorizontal: 10,\r\n            marginVertical: 5,\r\n            alignContent: 'flex-start',\r\n            alignItems: 'center',\r\n            justifyContent:'flex-start',\r\n            width: windowWidth>800? 300: 150,\r\n        },\r\n        img:{\r\n            height: windowWidth>800? 150: 120,\r\n            width: windowWidth>800? 280: 145,\r\n            // borderRadius: 10,\r\n        },\r\n        txt:{\r\n            fontSize: windowWidth>800?16:14,\r\n            fontWeight: 'bold',\r\n            fontFamily: 'roboto-medium',\r\n            color:'#63bde1',\r\n            width: windowWidth>800? 280: 145,\r\n            padding: 5,\r\n            marginBottom: 10,\r\n            marginTop: 5\r\n        },\r\n        btn:{\r\n            color: '#E1EFF5',\r\n            backgroundColor:'#E1EFF5',\r\n            margin: 10,\r\n            borderRadius: 10,\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n            width: 100,\r\n        },\r\n        btnText:{\r\n            fontSize: windowWidth>800?16:14,\r\n            fontWeight: 'bold',\r\n            fontFamily: 'roboto-medium',\r\n            color:'#121212',\r\n            padding: 5,\r\n            margin: 5,\r\n        }\r\n    })\r\n    return styles\r\n}\r\n\r\nexport const BlogContentStyle = ()=>{\r\n    const {darkTheme} = useTheme()\r\n    const styles = StyleSheet.create({\r\n        container:{\r\n            flex:1,\r\n            backgroundColor: darkTheme?'#121212':'#ffffff',\r\n            width: windowWidth>600 ?windowWidth*0.7: windowWidth*0.8,\r\n        },\r\n        upperWrapper:{\r\n            flexDirection: windowWidth>800?'row': 'column',\r\n            padding: windowWidth> 600?10: 2,\r\n            justifyContent: 'center',\r\n            alignContent: 'center',\r\n            flexWrap: 'wrap',\r\n        },\r\n        lowerWrapper:{\r\n            flexWrap: 'wrap',\r\n            paddingHorizontal: windowWidth> 600?10: 2,\r\n            alignContent: 'center',\r\n            alignItems: 'center',\r\n            width:windowWidth> 600? windowWidth*0.5: windowWidth*0.7,\r\n        },\r\n        bioWrapper:{\r\n            flexDirection:'column',\r\n            padding:5,\r\n            justifyContent: 'flex-start',\r\n            alignItems:'flex-start'\r\n        },\r\n        imgWrapper:{\r\n            margin:5,\r\n            padding: 5,\r\n            flexDirection: 'column',\r\n            alignContent: windowWidth>800?'flex-end': 'center',\r\n            alignItems: windowWidth>800?'flex-end': 'center',\r\n        },\r\n        dateTimeWrapper:{\r\n            flexDirection: 'row',\r\n        },\r\n        imgContentWrapper:{\r\n            flexDirection: 'column',\r\n            alignContent: 'center',\r\n            alignItems: 'center',\r\n        },\r\n        img:{\r\n            width: windowWidth>800?400:windowWidth> 600? 300: 200,\r\n            height: windowWidth>800?350: 200,\r\n            borderRadius: 10,\r\n        },\r\n        contentImg:{\r\n            width: windowWidth>800?700: windowWidth> 600? 300: windowWidth*0.6,\r\n            height: windowWidth>800?300: 200,\r\n            borderRadius: 10,\r\n            marginVertical: 10,\r\n        },\r\n        imgCopyrightText:{\r\n            fontSize: 10,\r\n            fontStyle: 'italic',\r\n            fontFamily: 'roboto-italic',\r\n            color: darkTheme?'#ffffff':'#121212',\r\n        },\r\n        title:{\r\n            fontSize: windowWidth> 600? 32: 28,\r\n            fontWeight: 'bold',\r\n            color: '#63bde1',\r\n            flexWrap: 'wrap',\r\n            fontFamily: 'roboto-italic'\r\n        },\r\n        timeText:{\r\n            fontSize: windowWidth>800? 14:12,\r\n            fontWeight: 'bold',\r\n            color: darkTheme?'#ffffff':'#121212',\r\n            marginRight: 10,\r\n            fontFamily: 'roboto-italic'\r\n        },\r\n        dateText:{\r\n            fontSize: windowWidth>800? 14:12,\r\n            fontWeight: 'bold',\r\n            color: darkTheme?'#ffffff':'#121212',\r\n            fontFamily: 'roboto-italic'\r\n        },\r\n        editorText:{\r\n            fontSize: windowWidth>800? 12: 11,\r\n            fontStyle: 'italic',\r\n            color: darkTheme?'#ffffff':'#121212',\r\n            fontFamily: 'roboto-medium'\r\n        },\r\n        contentText:{\r\n            color: darkTheme?'#ffffff':'#242424',\r\n            fontSize: windowWidth>800? 16: 14,\r\n            fontWeight: '200',\r\n            fontFamily: 'roboto-regular'\r\n        },\r\n        extendedBtn:{\r\n            alignItems: 'center',\r\n            alignContent:'center',\r\n            backgroundColor: darkTheme?'#121212':'#ffffff',\r\n            paddingVertical: 10,\r\n        },\r\n        extendText:{\r\n            color: '#63bde1',\r\n            fontSize: windowWidth> 600?18: 16,\r\n            fontWeight: 'bold',\r\n            fontFamily: 'roboto-italic'\r\n            // width: 90,\r\n        },\r\n        loadText:{\r\n            fontSize:windowWidth>800? 16:13,\r\n            color:'#63bde1',\r\n            fontWeight:'bold',\r\n            margin: 15,\r\n        },\r\n    })\r\n\r\n    return styles\r\n}\r\n\r\n\r\nexport const BlogReadStyle = ()=>{\r\n    const {darkTheme} = useTheme()\r\n    const styles = StyleSheet.create({\r\n        container:{\r\n            flex:1,\r\n            alignItems:'center',\r\n            backgroundColor: darkTheme?'#121212':'#ffffff',\r\n            paddingLeft: 15,\r\n            paddingRight:15,\r\n        },\r\n        trendingWrapper:{\r\n            flexDirection:'column',\r\n            padding: 10,\r\n            alignItems: 'space-between',\r\n            alignContent: 'space-around',\r\n            width: windowWidth>1000? 900: windowWidth>800?700:350,\r\n        },\r\n        trendingText:{\r\n            fontSize:windowWidth>800? 20:14,\r\n            color:'#63bde1',\r\n            fontWeight:'bold',\r\n            margin: 15,\r\n        },\r\n        story:{\r\n            color: darkTheme?'#ffffff':'#242424',\r\n            fontSize: windowWidth>800? 16: 14,\r\n            fontWeight: '400',\r\n            fontFamily: 'source-serif-pro, Georgia, Cambria, \"Times New Roman\", Times,'\r\n        }\r\n    })\r\n\r\n    return styles\r\n}\r\n\r\nexport const  BottomSideStyle = ()=>{\r\n    const {darkTheme} = useTheme()\r\n    const styles = StyleSheet.create({\r\n        container:{\r\n            backgroundColor: darkTheme?'rgba(0, 0, 0, 0.8)': '#C9E3EE',\r\n            padding: 10,\r\n            paddingBottom: 20,\r\n            width: windowWidth,\r\n            alignItems: 'center',\r\n            justifyContent: 'center'\r\n        },\r\n        titleWrapper:{\r\n            justifyContent: 'center',\r\n            alignContent: 'center',\r\n            alignItems:'center',\r\n            margin: 10\r\n        },\r\n        connectWrapper:{\r\n            flexDirection: 'column',\r\n            alignContent:'center',\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n            padding: 10,\r\n            width: windowWidth,\r\n        },\r\n        linkWrapper:{\r\n            flexDirection: 'row',\r\n            paddingVertical: 10,\r\n            paddingHorizontal: windowWidth>600?20:5,\r\n        },\r\n        bottomContent:{\r\n            alignItems: 'center',\r\n            flexDirection: 'row'\r\n        },\r\n        bottomLinkWrapper:{\r\n            marginHorizontal: windowWidth>800?20:10,\r\n            marginVertical: 5,\r\n        },\r\n        bottomVerticalLine:{\r\n            backgroundColor:darkTheme?'#ffffff':'#a0a0a0',\r\n            width: windowWidth*90/100,\r\n            height: 1,\r\n        },\r\n        title:{\r\n            fontSize: 24,\r\n            fontWeight: 'bold',\r\n            color: '#63bde1',\r\n            marginBottom: 10\r\n        },\r\n        titleSec:{\r\n            fontSize: 16,\r\n            fontWeight: 'bold',\r\n            color: '#63bde1',\r\n        },\r\n        copyRight:{\r\n            color: darkTheme?'#ffffff':'#121212',\r\n            fontSize: 14,\r\n        },\r\n        bottomTitle:{\r\n            fontSize: 13,\r\n            color: darkTheme?'#ffffff':'#121212',\r\n            fontWeight: 'bold'\r\n        },\r\n        bottomLinkText:{\r\n            fontSize: windowWidth>800? 14:12,\r\n            fontWeight: 'bold',\r\n            color: darkTheme?'#ffffff':'#121212',\r\n        },\r\n        linkText:{\r\n            fontSize:11,\r\n            color: '#63bde1',\r\n            marginLeft: 5\r\n        },\r\n    })\r\n    return styles\r\n}\r\n\r\nexport const CreatePostStyle= ()=>{\r\n    const {roboFont,darkTheme} = useTheme()\r\n    const styles = StyleSheet.create({\r\n        container:{\r\n            flexDirection: 'row',\r\n            backgroundColor: darkTheme?'#121212':'#ffffff',\r\n            width: windowWidth,\r\n        },\r\n        contentWrapper:{\r\n            alignContent: 'center',\r\n            alignItems: 'center',\r\n            padding: 10,\r\n        },\r\n        otherWrapper:{\r\n            alignContent: 'center',\r\n            alignItems: 'center'\r\n        },\r\n        btn:{\r\n            padding: 10,\r\n            color: '#D6E7DE',\r\n            backgroundColor:'#D6E7DE',\r\n            margin: 10,\r\n            borderRadius: 10,\r\n        },\r\n        btnText:{\r\n            fontSize: 16,\r\n            fontWeight: 'bold',\r\n            color: '#63bde1',\r\n            fontFamily: 'roboto-regular'\r\n        },\r\n        uploadButton: {\r\n            backgroundColor: '#63bde1',\r\n            color: 'white',\r\n            padding: 10,\r\n            borderRadius: 5,\r\n            cursor: 'pointer',\r\n        },\r\n        input: {\r\n            display: 'none',\r\n        },\r\n    })\r\n    return styles\r\n}\r\n\r\nexport const NewMultipleStyle= ()=>{\r\n    const {roboFont,darkTheme} = useTheme()\r\n    const styles = StyleSheet.create({\r\n        container:{\r\n            flexDirection: windowWidth> 600?'row': 'column',\r\n            backgroundColor: darkTheme?'#121212':'#ffffff',\r\n            width: windowWidth,\r\n        },\r\n        contentWrapper:{\r\n            alignContent: 'center',\r\n            alignItems: 'center',\r\n            padding: 10,\r\n        },\r\n        otherWrapper:{\r\n            alignContent: 'center',\r\n            alignItems: 'center'\r\n        },\r\n        btn:{\r\n            padding: 10,\r\n            color: '#D6E7DE',\r\n            backgroundColor:'#D6E7DE',\r\n            margin: 10,\r\n            borderRadius: 10,\r\n        },\r\n        btnText:{\r\n            fontSize: 16,\r\n            fontWeight: 'bold',\r\n            color: '#63bde1',\r\n            fontFamily: 'roboto-regular'\r\n        },\r\n        uploadButton: {\r\n            backgroundColor: '#63bde1',\r\n            color: 'white',\r\n            padding: 10,\r\n            borderRadius: 5,\r\n            cursor: 'pointer',\r\n        },\r\n        input: {\r\n            display: 'none',\r\n        },\r\n    })\r\n    return styles\r\n}\r\n\r\nexport const BlogPreviewStyle= ()=>{\r\n    const {roboFont,darkTheme} = useTheme()\r\n    const styles = StyleSheet.create({\r\n        container:{\r\n            flexDirection: 'row',\r\n            backgroundColor: darkTheme?'#121212':'#ffffff',\r\n            width: windowWidth,\r\n        },\r\n        contentWrapper:{\r\n            alignContent: 'center',\r\n            alignItems: 'center',\r\n            padding: 10,\r\n        },\r\n        otherWrapper:{\r\n            alignContent: 'center',\r\n            alignItems: 'center'\r\n        },\r\n        btn:{\r\n            padding: 10,\r\n            color: '#D6E7DE',\r\n            backgroundColor:'#D6E7DE',\r\n            margin: 10,\r\n            borderRadius: 10,\r\n        },\r\n        btnText:{\r\n            fontSize: 16,\r\n            fontWeight: 'bold',\r\n            color: '#63bde1',\r\n            fontFamily: 'roboto-regular'\r\n        }\r\n    })\r\n    return styles\r\n}\r\n\r\nexport const BlogContentPreviewStyle= ()=>{\r\n    const {roboFont,darkTheme} = useTheme()\r\n    const styles = StyleSheet.create({\r\n        container:{\r\n            flex:1,\r\n            backgroundColor:darkTheme?'#121212':'#ffffff',\r\n            width: windowWidth*2/3,\r\n            paddingBottom: 10\r\n        },\r\n        upperWrapper:{\r\n            flexDirection: windowWidth>800?'row': 'column',\r\n            padding: 10,\r\n            justifyContent: 'center',\r\n            alignContent: 'center',\r\n            flexWrap: 'wrap'\r\n        },\r\n        lowerWrapper:{\r\n            flexWrap: 'wrap',\r\n            paddingHorizontal: 10,\r\n            alignContent: 'center',\r\n            alignItems: 'center',\r\n        },\r\n        bioWrapper:{\r\n            flexDirection:'column',\r\n            padding:5,\r\n            justifyContent: 'flex-start',\r\n            alignItems:'flex-start'\r\n        },\r\n        imgWrapper:{\r\n            margin:5,\r\n            padding: 5,\r\n            flexDirection: 'column',\r\n            alignContent: windowWidth>800?'flex-end': 'center',\r\n            alignItems: windowWidth>800?'flex-end': 'center',\r\n        },\r\n        dateTimeWrapper:{\r\n            flexDirection: 'row',\r\n        },\r\n        img:{\r\n            width: windowWidth>800?400: 200,\r\n            height: windowWidth>800?300: 150,\r\n        },\r\n        imgCopyrightText:{\r\n            fontSize: 10,\r\n            fontStyle: 'italic',\r\n            color: darkTheme?'#ffffff':'#242424',\r\n            fontFamily: 'roboto-italic'\r\n        },\r\n        title:{\r\n            fontSize: 24,\r\n            fontWeight: 'bold',\r\n            color: '#63bde1',\r\n            flexWrap: 'wrap',\r\n            fontFamily: 'roboto-bold'\r\n        },\r\n        timeText:{\r\n            fontSize: windowWidth>800? 14:12,\r\n            fontWeight: 'bold',\r\n            color: darkTheme?'#ffffff':'#242424',\r\n            marginRight: 10,\r\n            fontFamily: 'roboto-medium'\r\n        },\r\n        dateText:{\r\n            fontSize: windowWidth>800? 14:12,\r\n            fontWeight: 'bold',\r\n            color: darkTheme?'#ffffff':'#242424',\r\n            fontFamily: 'roboto-medium'\r\n        },\r\n        editorText:{\r\n            fontSize: windowWidth>800? 12: 11,\r\n            fontStyle: 'italic',\r\n            color: darkTheme?'#ffffff':'#242424',\r\n            fontFamily: 'roboto-regular'\r\n        },\r\n        contentText:{\r\n            color: darkTheme?'#ffffff':'#242424',\r\n            fontSize: windowWidth>800? 16: 14,\r\n            fontWeight: '400',\r\n            fontFamily: 'source-serif-pro, Georgia, Cambria, \"Times New Roman\", Times,',\r\n            fontFamily: 'roboto-medium'\r\n        },\r\n        extendedBtn:{\r\n            width: 90,\r\n        },\r\n        extendText:{\r\n            color: '#63bde1',\r\n            fontSize: 14,\r\n            fontWeight: 'bold',\r\n            width: 90,\r\n            fontFamily:'roboto-medium'\r\n        }\r\n    })\r\n    return styles\r\n}\r\n","export const baseUrl = 'http://127.0.0.1:8000/' // 'https://backend.yetublog.com/'\r\nexport const baseUrlImage = 'http://127.0.0.1:8000'// 'http://yetublog.com'","//describes the title, image and content paragraphs layout visible to the customers.\r\n//styling is described below the component.\r\nimport React, {useState} from 'react'\r\nimport {View, Text,TouchableOpacity,Image} from 'react-native'\r\nimport axios from 'axios'\r\nimport FormData from 'form-data'\r\nimport { windowWidth } from '../utils/dimensions'\r\nimport { Feather, Ionicons } from '@expo/vector-icons'\r\nimport { BlogContentStyle } from '../utils/app-styles'\r\nimport { useTheme } from '../utils/state-context'\r\nimport { baseUrl, baseUrlImage } from '../utils/urls'\r\n\r\n\r\nfunction Blog({blog}){\r\n    const {darkTheme} = useTheme()\r\n    //date management\r\n    const monthNames = [\r\n        \"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\r\n        \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\r\n    ]\r\n    const dateObject = new Date(blog.created_at)\r\n    const year = dateObject.getFullYear()\r\n    const month = dateObject.getMonth()\r\n    const day = dateObject.getDate()\r\n    const hours = dateObject.getHours()\r\n    const minutes = dateObject.getMinutes()\r\n    const [expanded, setExpanded] = useState(false)\r\n\r\n    const blogContentStyle = BlogContentStyle()\r\n\r\n    // converts story object to string\r\n    const content = blog?.story\r\n    const selectedImages = blog?.contentImage\r\n    const mergedContent = []\r\n    const contentReadMore =[]\r\n\r\n    if(content && selectedImages){\r\n        for (let i = 0; i < Math.max(selectedImages.length, content.length); i++) {\r\n            if (i < content.length) {\r\n                mergedContent.push({ type: 'story', data: content[i] })\r\n                }\r\n            if (i < selectedImages.length) {\r\n            mergedContent.push({ type: 'image', data: selectedImages[i] })\r\n            }\r\n        }\r\n    }\r\n\r\n    if(content && selectedImages){\r\n        contentReadMore.push({ type: 'story', data: content[0] })\r\n        contentReadMore.push({ type: 'image', data: selectedImages[0] })\r\n    }\r\n\r\n    // function that toggles the expansion of content\r\n    const toggleExpand = () => {\r\n        setExpanded(!expanded)\r\n    }\r\n    // checks for delays and prevents crushing of blog\r\n    if (!blog.story) {\r\n        return <Text>Loading...</Text>;\r\n    }\r\n\r\n    const data = new FormData()\r\n    data.append('id',blog.id)\r\n    const sendLike = async()=>{\r\n        await axios.post(`${baseUrl}like/`,data)\r\n        .then((response)=> alert('Done, You liked this blog'))\r\n        .catch((error)=>alert(error))\r\n    }\r\n    const sendDislike = async()=>{\r\n        await axios.post(`${baseUrl}dislike/`,data)\r\n        .then((response)=> alert('Done, You disliked this blog'))\r\n        .catch((error)=>alert(error))\r\n    }\r\n    // rendered component\r\n    return(\r\n        <View style={{ flexDirection: 'row', }}>\r\n            <View style={{\r\n                flexDirection: 'column',\r\n                alignItems:'center',\r\n                marginHorizontal: windowWidth> 600?5:1,\r\n                marginTop:100,\r\n                paddingHorizontal: 2,\r\n                width: windowWidth>600?100: 50,\r\n                backgroundColor:'#7DA9BB',\r\n                borderRadius: 10,\r\n                height: windowWidth> 600?200: 150,\r\n            }} >\r\n                <View style={{ alignItems: 'center',\r\n                marginHorizontal:windowWidth>600?10:2, marginVertical: 10\r\n                }}>\r\n                            <TouchableOpacity onPress={sendLike}>\r\n                                <Feather name=\"thumbs-up\" size={24} color={'#ffffff'} />\r\n                            </TouchableOpacity>\r\n                            {windowWidth> 600 && <Text style={blogContentStyle.dateText}>Like</Text>}\r\n                    </View>\r\n                    <View style={{ alignItems: 'center',marginHorizontal: 10, marginVertical: 10 }}>\r\n                            <TouchableOpacity onPress={sendDislike}>\r\n                                <Feather name=\"thumbs-down\" size={24} color={'#ffffff'} />\r\n                            </TouchableOpacity>\r\n                            {windowWidth> 600 && <Text style={blogContentStyle.dateText}>Dislike</Text>}\r\n                    </View>\r\n                    <View style={{ alignItems: 'center',marginHorizontal: 10, marginVertical: 10 }}>\r\n                            <TouchableOpacity>\r\n                                <Feather name=\"message-circle\" size={24} color={'#ffffff'} />\r\n                            </TouchableOpacity>\r\n                            {windowWidth> 600 && <Text style={blogContentStyle.dateText}>comment</Text>}\r\n                    </View>\r\n            </View>\r\n            <View style={blogContentStyle.container} key={blog.id}>\r\n            {/* Upper Wrapper */}\r\n            <View style={blogContentStyle.upperWrapper}>\r\n                <View style={blogContentStyle.bioWrapper}>\r\n                    <View style={{ width: windowWidth>800?300:200 }}>\r\n                        <Text style={blogContentStyle.title}>\r\n                            {blog.title}\r\n                        </Text>\r\n                    </View>\r\n                    <View style={blogContentStyle.dateTimeWrapper}>\r\n                            <Text style={blogContentStyle.dateText}>{`Posted on ${day} ${monthNames[month]}, ${year} `}</Text>\r\n                            <Text style={blogContentStyle.timeText}>{`${hours} : ${minutes} ${hours>11?'pm': 'am'} `}</Text>\r\n                    </View>\r\n                    <View>\r\n                        <Ionicons name='person-circle-outline'\r\n                        size={windowWidth>800?50:30} style={blogContentStyle.contentText}/>\r\n                    </View>\r\n                    <Text style = {blogContentStyle.contentText}>\r\n                        {`By ${blog?.owner?.owner_name}`}\r\n                    </Text>\r\n                    <View >\r\n                        <Text style={blogContentStyle.editorText}>\r\n                        {`Talks About: ${blog?.owner?.owner_description}`}\r\n                        </Text>\r\n                    </View>\r\n                    <Text style={{ ...blogContentStyle.editorText,fontWeight: 'bold' }}>\r\n                        {/*calculates approximate duration able to read the blog*/}\r\n                        {`.   ${Math.ceil(content[0].story.length/1500*content.length)} min Read`}</Text>\r\n                </View>\r\n                <View style= {blogContentStyle.imgWrapper}>\r\n                    <Image source={{ uri:`${baseUrlImage}${blog.frontImage}` }} style={blogContentStyle.img}/>\r\n                    <Text style={blogContentStyle.imgCopyrightText}>{blog.imageCopyRight}</Text>\r\n                </View>\r\n                </View>\r\n                {/* Lower Wrapper */}\r\n                <View style={blogContentStyle.lowerWrapper}>\r\n                    {/* < style={{ width:windowWidth>800? 700:windowWidth>400?400: 300, }}> */}\r\n                        {expanded?mergedContent.map((item, index) => (\r\n                            <View key={index}>\r\n                                    {item.type === 'story' && (\r\n                                        <Text key={index} style={blogContentStyle.contentText}>\r\n                                        {item.data.story}\r\n                                        </Text>\r\n                                    )}\r\n                                    {item.type === 'image' &&  (\r\n                                        <View style={blogContentStyle.imgContentWrapper}>\r\n                                            <Image\r\n                                            source={{ uri:`${baseUrl}${item.data.media}` }}\r\n                                            style={blogContentStyle.contentImg}\r\n                                            />\r\n                                        </View>\r\n                                    )}\r\n                            </View>\r\n                        )):\r\n                        contentReadMore.map((item, index) => (\r\n                            <View key={index}>\r\n                                    {item.type === 'story' && (\r\n                                        <Text key={index} style={blogContentStyle.contentText}>\r\n                                        {item.data.story}\r\n                                        </Text>\r\n                                    )}\r\n                                    {item.type === 'image' &&  (\r\n                                        <View style={blogContentStyle.imgContentWrapper}>\r\n                                            <Image\r\n                                            source={{ uri:`${baseUrl}${item.data.media}` }}\r\n                                            style={blogContentStyle.contentImg}\r\n                                            />\r\n                                        </View>\r\n                                    )}\r\n                            </View>\r\n                        ))\r\n                        }\r\n                        {!expanded?\r\n                            // expands the content to read it all\r\n                            <TouchableOpacity onPress={toggleExpand} style={blogContentStyle.extendedBtn}>\r\n                                <Text style={blogContentStyle.extendText}>Read more...</Text>\r\n                            </TouchableOpacity>\r\n                            :null\r\n                        }\r\n                    {/* choices and other reaction sections */}\r\n                    {/* legal acknowledgement text */}\r\n                    <View style={{ marginVertical: 10 ,alignItems:'flex-start',alignContent:'flex-start'}} >\r\n                        <Text style={blogContentStyle.dateText}>\r\n                            {`This material is the Product and craft of ${blog?.owner?.owner_name}`}\r\n                        </Text>\r\n                    </View>\r\n                </View>\r\n            </View>\r\n        </View>\r\n    )\r\n}\r\n\r\nexport default Blog","// this component is a card that describes the layout of the blogs card\r\n// its style is defined inside this file with imported dimensions\r\n\r\nimport React from 'react'\r\nimport {View, Text,TouchableOpacity,Image} from 'react-native'\r\nimport { BlogCardStyle,BlogContentStyle } from '../utils/app-styles'\r\nimport { baseUrlImage } from '../utils/urls'\r\n\r\n\r\nconst BlogCard=({onPress,data})=>{\r\n    // const  nav = useNavigation()\r\n    const styles = BlogCardStyle()\r\n    const blogContentStyle = BlogContentStyle()\r\n\r\n    //date management\r\n    const monthNames = [\r\n        \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\",\r\n        \"Jul\", \"Aug\", \"Sept\", \"Oct\", \"Nov\", \"Dec\"\r\n    ]\r\n    const dateObject = new Date(data.created_at)\r\n    const year = dateObject.getFullYear()\r\n    const month = dateObject.getMonth()\r\n    const day = dateObject.getDate()\r\n    // converts story object to string\r\n    const content = data.story\r\n    return(\r\n        <View style={styles.container} key={data.id}>\r\n            <Image source={{ uri: `${baseUrlImage}${data.frontImage}` }} style={styles.img}/>\r\n            <TouchableOpacity\r\n            onPress={onPress}\r\n            >\r\n                <Text style={styles.txt}>{data.title}</Text>\r\n                <Text style = {blogContentStyle.contentText}>\r\n                    {`By ${data?.owner?.owner_name}`}\r\n                </Text>\r\n                <Text style={{ ...blogContentStyle.editorText,fontWeight: 'bold' }}>\r\n                    {`.  ${Math.ceil(content[0].story.length/1500*content.length)} min Read  .  ${day} ${monthNames[month]}, ${year} `}\r\n                </Text>\r\n                {/* <Text style={{ ...blogContentStyle.editorText,fontWeight: 'bold',paddingTop: 10 }}>\r\n                    {`${Math.ceil(content.length/1500)} min Read`}\r\n                </Text> */}\r\n            </TouchableOpacity>\r\n        </View>\r\n    )\r\n}\r\nexport default BlogCard\r\n","import { Feather, Ionicons,MaterialCommunityIcons } from '@expo/vector-icons'\r\nimport React from 'react'\r\nimport {View,Text,StyleSheet} from 'react-native'\r\nimport { windowWidth } from '../utils/dimensions'\r\nimport { TouchableOpacity } from 'react-native'\r\nimport * as Linking from 'expo-linking'\r\nimport { BottomSideStyle } from '../utils/app-styles'\r\nimport { useTheme } from '../utils/state-context'\r\n\r\n\r\nconst BottomSide= ({navigation}) => {\r\n    const {darkTheme} = useTheme()\r\n    const instagramLink = ()=>{\r\n        Linking.openURL('https://bumho-nisubire.web.app')\r\n    }\r\n    const emailLink = () =>{\r\n        Linking.openURL('mailto:youstory@gmail.com')\r\n    }\r\n    const linkWarning=()=>{\r\n        alert('to be provided soon!')\r\n    }\r\n    const bottomSideStyle = BottomSideStyle()\r\n    return(\r\n        <View style={bottomSideStyle.container}>\r\n            <View style={bottomSideStyle.connectWrapper}>\r\n                <View style={{width: 200}}/>\r\n                <View>\r\n                    <View style={bottomSideStyle.titleWrapper}>\r\n                        <Text style={bottomSideStyle.title}>Your Story</Text>\r\n                    </View>\r\n                </View>\r\n                <View/>\r\n                <Text style={bottomSideStyle.bottomTitle}>Social Media Handles:</Text>\r\n                <View style={bottomSideStyle.bottomContent}>\r\n                    <TouchableOpacity style={bottomSideStyle.linkWrapper} onPress={emailLink}>\r\n                        <MaterialCommunityIcons name='gmail'size={30} color={darkTheme?'#ffffff':'#121212'}/>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity style={bottomSideStyle.linkWrapper} onPress={instagramLink }>\r\n                        <Ionicons name='logo-instagram'size={30} color={darkTheme?'#ffffff':'#121212'}/>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity style={bottomSideStyle.linkWrapper}onPress={linkWarning }>\r\n                        <Feather name='message-square'size={30} color={darkTheme?'#ffffff':'#121212'}/>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity style={bottomSideStyle.linkWrapper}onPress={linkWarning }>\r\n                        <Ionicons name='logo-whatsapp'size={30} color={darkTheme?'#ffffff':'#121212'}/>\r\n                    </TouchableOpacity>\r\n                </View>\r\n                <View style={bottomSideStyle.bottomVerticalLine}></View>\r\n                <View style={bottomSideStyle.bottomContent}>\r\n                    <MaterialCommunityIcons name=\"copyright\" size={24} color={darkTheme?'#ffffff':'#121212'} />\r\n                    <Text style={bottomSideStyle.copyRight}> Bumho Nisubire </Text>\r\n                    <TouchableOpacity style={bottomSideStyle.bottomLinkWrapper}>\r\n                        <Text style={bottomSideStyle.bottomLinkText}>Help</Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity style={bottomSideStyle.bottomLinkWrapper}>\r\n                        <Text style={bottomSideStyle.bottomLinkText}>About YourStory</Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity style={bottomSideStyle.bottomLinkWrapper}>\r\n                        <Text style={bottomSideStyle.bottomLinkText}>Terms</Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity style={bottomSideStyle.bottomLinkWrapper}>\r\n                        <Text style={bottomSideStyle.bottomLinkText}>Privacy</Text>\r\n                    </TouchableOpacity>\r\n                </View>\r\n            </View>\r\n        </View>\r\n    )\r\n}\r\n\r\nexport default BottomSide\r\n\r\n","import React,{useEffect,useState} from 'react'\r\nimport {View,Text,SafeAreaView,\r\n    ScrollView,\r\n    FlatList} from 'react-native'\r\nimport Blog from '../components/blog-content'\r\nimport BlogCard from '../components/blog-card'\r\nimport BottomSide from '../components/bottom-side'\r\nimport axios from 'axios'\r\nimport { windowHeight, windowWidth } from '../utils/dimensions'\r\nimport { HomeStyle } from '../utils/app-styles'\r\nimport { Spacer } from 'react-native-flex-layout'\r\nimport { useTheme } from '../utils/state-context'\r\nimport {baseUrl} from '../utils/urls'\r\n\r\n\r\nconst Home = ({navigation}) => {\r\n    const [data, setData] = useState([])\r\n    const [blog, setBlog] = useState([])\r\n    const [allBlogs, setAllBlogs] = useState()\r\n    const [owner, setOwner] = useState()\r\n    const {darkTheme} = useTheme()\r\n    const homeStyle = HomeStyle()\r\n    //assigns months\r\n    const monthNames = [\r\n        \"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\r\n        \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\r\n    ]\r\n    //assigning latest date\r\n    const dateObject = new Date()\r\n    const year = dateObject.getFullYear()\r\n    const month = dateObject.getMonth()\r\n    const day = dateObject.getDate()\r\n    //for detecting level reached\r\n    const [scrolledToTwoThirds, setScrolledToTwoThirds] = useState(false)\r\n\r\n    const fetchLatests = async()=>{\r\n        await axios.get(`${baseUrl}latest/`)\r\n        .then((response)=>{\r\n            setData(response.data)\r\n        })\r\n        .catch((err)=> alert(err.status))\r\n    }\r\n    // fetches all blogs\r\n    axios.get(`${baseUrl}/all/`)\r\n    .then((response)=>{\r\n        setAllBlogs(response.data)\r\n    })\r\n    .catch((err)=> alert(err))\r\n\r\n    const fetchMainBlog= async()=>{\r\n        await axios.get(`${baseUrl}latest_blog/`)\r\n        .then((response)=>{\r\n            setBlog(response.data)\r\n            setOwner(JSON.stringify(blog.owner, null, 2))\r\n        })\r\n        .catch((err)=> alert(JSON.stringify(err)))\r\n    }\r\n\r\n    useEffect(()=>{\r\n        fetchMainBlog()\r\n        fetchLatests()\r\n    }, [])\r\n\r\n    //handles onscroll events\r\n    const handleScroll = (event) => {\r\n        const contentHeight = event.nativeEvent.contentSize.height\r\n        const scrollOffset = event.nativeEvent.contentOffset.y\r\n        const twoThirds = (2/5) * contentHeight\r\n\r\n        if (scrollOffset >= twoThirds && !scrolledToTwoThirds) {\r\n            setScrolledToTwoThirds(true)\r\n            // Trigger your response here\r\n            alert(\"User reached 2/3 of the content\")\r\n        }\r\n    }\r\n\r\n    if (!blog.owner?.owner_name) {\r\n        return <View\r\n        style=\r\n        {{\r\n            height: windowHeight,\r\n            backgroundColor:darkTheme?'#121212':'#ffffff',\r\n            alignItems: 'center',alignContent:'center'\r\n        }}></View>\r\n    }\r\n\r\n    return(\r\n        <SafeAreaView style={{height: windowHeight,backgroundColor:darkTheme?'#121212':'#ffffff'}}>\r\n            <View>\r\n                <ScrollView\r\n                showsVerticalScrollIndicator={false}\r\n                onScroll={(event)=>handleScroll(event)}\r\n                >\r\n                        <View style={homeStyle.container}>\r\n                            <View style = {homeStyle.trendingWrapper}>\r\n                                <Text style={homeStyle.latestText}>Latest Publish and Other stories</Text>\r\n                                {<View style={homeStyle.dateTimeWrapper}>\r\n                                    <Text style={homeStyle.dateText}>{`Today ${day} ${monthNames[month]}, ${year} `}</Text>\r\n                                </View>}\r\n                            </View>\r\n                            {/* <View>\r\n                                <Blog blog={blog} owner={owner}/>\r\n                            </View> */}\r\n                            <View style={homeStyle.trendingWrapper}>\r\n                                <Text style={homeStyle.trendingText}>Latest Stories Published </Text>\r\n                                <View style={{ flexWrap: 'wrap',flexDirection:'row',\r\n                                    alignContent: 'space-between',\r\n                                    alignItems: 'space-between'}}\r\n                                >\r\n                                    <FlatList\r\n                                        data={data}\r\n                                        keyExtractor={(data, index) => index.toString()}\r\n                                        renderItem={({ item }) => <BlogCard data={item}\r\n                                        onPress={()=>navigation.navigate('BlogRead',{id:item.id})}/>}\r\n                                        numColumns = {windowWidth>800? 3: 2}\r\n                                    />\r\n                                </View>\r\n                            </View>\r\n                            <View style={homeStyle.trendingWrapper}>\r\n                                <Text style={homeStyle.trendingText}>All Stories </Text>\r\n                                <View>\r\n                                    <FlatList\r\n                                        data={allBlogs}\r\n                                        keyExtractor={(allBlogs, index) => index.toString()}\r\n                                        renderItem={({ item }) => <BlogCard data={item}\r\n                                        onPress={()=>navigation.navigate('BlogRead',{id:item.id})}/>}\r\n                                        numColumns = {windowWidth>800? 3: 2}\r\n                                    />\r\n                                </View>\r\n                            </View>\r\n                            <Spacer/>\r\n                            <BottomSide/>\r\n                        </View>\r\n                </ScrollView>\r\n            </View>\r\n        </SafeAreaView>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","import React, {useEffect, useState} from 'react'\r\nimport {View,Text,SafeAreaView,\r\n    ScrollView,ImageBackground, TouchableOpacity,\r\n    FlatList} from 'react-native'\r\nimport BlogCard from '../components/blog-card'\r\nimport BottomSide from '../components/bottom-side'\r\nimport axios from 'axios'\r\nimport { windowWidth,windowHeight } from '../utils/dimensions'\r\nimport { BlogsStyle } from '../utils/app-styles'\r\nimport { Spacer } from 'react-native-flex-layout'\r\nimport { useTheme } from '../utils/state-context'\r\nimport {baseUrl} from '../utils/urls'\r\n\r\n\r\nconst Blogs = ({navigation}) => {\r\n    const [data, setData] = useState()\r\n    // const [allBlogs, setAllBlogs] = useState()\r\n    const blogsStyle = BlogsStyle()\r\n    const {darkTheme} = useTheme()\r\n    const preText = 'We have rich content from\\ndifferent personalities and experiences.\\nTell your story and let it be known.'\r\n    useEffect(()=>{\r\n        // // fetches all blogs\r\n        // axios.get(\"https://backend.yetublog.com/\")\r\n        // .then((response)=>{\r\n        //     setAllBlogs(response.data)\r\n        // })\r\n        // .catch((err)=> alert(err))\r\n\r\n        // fetches latest blogs\r\n        axios.get(`${baseUrl}latest/`)\r\n        .then((response)=>{\r\n            setData(response.data)\r\n        })\r\n        // .catch((err)=> alert(err))\r\n    }, [])\r\n\r\n    if (!data) {\r\n        return <View style={{height: windowHeight,backgroundColor:darkTheme?'#121212':'#ffffff'}}></View>\r\n    }\r\n\r\n    return(\r\n        <SafeAreaView style={{height: windowHeight,backgroundColor:darkTheme?'#121212':'#ffffff'}}>\r\n            <View>\r\n                <ScrollView\r\n                showsVerticalScrollIndicator={false}\r\n                >\r\n                    <View style={blogsStyle.starter}>\r\n                        <ImageBackground\r\n                            source={require('../../assets/nairobi.jpg')}\r\n                            style={blogsStyle.backgroundImage}\r\n                        >\r\n                            <View style={[blogsStyle.overlay, { backgroundColor: 'rgba(0,0,0, 0.8)',\r\n                                alignContent:'center', justifyContent: 'center'\r\n                            }]}>\r\n                                <View style={{ flexDirection: 'row' ,marginBottom: 20,}} >\r\n                                    <View>\r\n                                            <Text style={blogsStyle.titleText}>Tell YourStory, get YourStory </Text>\r\n                                            <Text style={blogsStyle.titleText}>Home of Stories... </Text>\r\n                                    </View>\r\n                                    <View style={{ width: windowWidth*0.1 }} />\r\n                                    <Text style={blogsStyle.preText}>{preText}</Text>\r\n                                </View>\r\n                                <TouchableOpacity\r\n                                        style={blogsStyle.btn}\r\n                                        onPress={()=>navigation.navigate('Subscription')}\r\n                                    >\r\n                                        <Text style={blogsStyle.text} >Get All our Updates</Text>\r\n                                    </TouchableOpacity>\r\n                            </View>\r\n                        </ImageBackground>\r\n                    </View>\r\n                    <View style={blogsStyle.container}>\r\n                        <View style={blogsStyle.trendingWrapper}>\r\n                            <Text style={blogsStyle.trendingText}>Latest Stories</Text>\r\n                            <View>\r\n                                <FlatList\r\n                                    data={data}\r\n                                    keyExtractor={(data, index) => index.toString()}\r\n                                    renderItem={({ item }) => <BlogCard data={item}\r\n                                    onPress={()=>navigation.navigate('BlogRead',{id:item.id})}/>}\r\n                                    numColumns = {windowWidth>800? 3: 2}\r\n                                />\r\n                            </View>\r\n                        </View>\r\n                        {/* <View style={blogsStyle.trendingWrapper}>\r\n                            <Text style={blogsStyle.trendingText}>All Stories </Text>\r\n                            <View>\r\n                                <FlatList\r\n                                    data={allBlogs}\r\n                                    keyExtractor={(allBlogs, index) => index.toString()}\r\n                                    renderItem={({ item }) => <BlogCard data={item}\r\n                                    onPress={()=>navigation.navigate('BlogRead',{id:item.id})}/>}\r\n                                    numColumns = {windowWidth>800? 3: 2}\r\n                                />\r\n                            </View>\r\n                        </View> */}\r\n                        <BottomSide/>\r\n                    </View>\r\n                </ScrollView>\r\n            </View>\r\n        </SafeAreaView>\r\n    )\r\n}\r\n\r\nexport default Blogs\r\n","import React from 'react'\r\nimport {Ionicons} from '@expo/vector-icons';\r\nimport {View, Text, StyleSheet,TextInput} from 'react-native'\r\nimport { windowWidth } from '../utils/dimensions'\r\nimport { FormStyle } from '../utils/app-styles';\r\n\r\nconst FormInput = ({label, placeholder,title,lineNum, ...rest}) =>{\r\n    const formStyle = FormStyle()\r\n    return(\r\n        <View style={formStyle.container}>\r\n            <Text style={formStyle.titleStyle}>\r\n                {title}\r\n            </Text>\r\n            <TextInput\r\n            style= {formStyle.inputField}\r\n                value={label}\r\n                numberOfLines={lineNum}\r\n                placeholderTextColor='#666'\r\n                placeholder={placeholder}\r\n                multiline={true}\r\n                {...rest}\r\n            />\r\n        </View>\r\n    )\r\n}\r\n\r\nexport default FormInput","import React from 'react'\r\nimport {View, Text,TextInput} from 'react-native'\r\nimport { CredentialFormStyle } from '../utils/app-styles'\r\n\r\nconst CredentialFormInput = ({label, placeholder,title,lineNum, ...rest}) =>{\r\n    //initializing styles\r\n    const credentialFormStyle = CredentialFormStyle()\r\n    return(\r\n        <View style={credentialFormStyle.container}>\r\n            <Text style={credentialFormStyle.titleStyle}>\r\n                {title}\r\n            </Text>\r\n            <TextInput\r\n            style= {credentialFormStyle.inputField}\r\n                value={label}\r\n                numberOfLines={lineNum}\r\n                placeholderTextColor='#666'\r\n                placeholder={placeholder}\r\n                multiline={false}\r\n                {...rest}\r\n            />\r\n        </View>\r\n    )\r\n}\r\n\r\nexport default CredentialFormInput","import React,{useState} from 'react'\r\nimport {View,Text,SafeAreaView, TouchableOpacity, ScrollView} from 'react-native'\r\nimport { windowWidth,windowHeight } from '../utils/dimensions'\r\nimport FormInput from '../components/formInput'\r\nimport BottomSide from '../components/bottom-side'\r\nimport FormData from 'form-data'\r\nimport axios from 'axios'\r\nimport { SubscriptionStyle } from '../utils/app-styles'\r\nimport { Spacer } from 'react-native-flex-layout'\r\nimport { useTheme } from '../utils/state-context'\r\nimport CredentialFormInput from '../components/credentialsFormComponent'\r\nimport { baseUrl } from '../utils/urls'\r\n\r\nconst Subscription = ({navigation}) => {\r\n    const [username, setUsername] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const data = new FormData()\r\n    const {darkTheme} = useTheme()\r\n\r\n    const subscriptionStyle = SubscriptionStyle()\r\n    //posts the request to the backend\r\n    const SubButton=async({username,email})=>{\r\n        data.append('email', email)\r\n        data.append('name', username)\r\n        await axios.post(`${baseUrl}register/`,data)\r\n        .then((response)=>{\r\n            alert(`${username} Subscribed Successfully!`)\r\n        })\r\n        .catch((err)=> alert(err))\r\n    }\r\n\r\n    return(\r\n        <SafeAreaView style=\r\n        {{\r\n            // width:windowWidth,\r\n            height: windowHeight,\r\n            backgroundColor:darkTheme?'#121212':'#ffffff'\r\n        }}>\r\n            <View\r\n            style ={subscriptionStyle.topContainer}\r\n            >\r\n                <ScrollView>\r\n                    <View\r\n                    style={subscriptionStyle.container}\r\n                    >\r\n                        <View style={subscriptionStyle.boxContainer}>\r\n                            <CredentialFormInput\r\n                                    title={'Username:'}\r\n                                    label={username}\r\n                                    lineNum={1}\r\n                                    placeholder={'Full name'}\r\n                                    onChangeText = {content => setUsername(content)}\r\n                                />\r\n                                    <CredentialFormInput\r\n                                        title={'Email:'}\r\n                                        label={email}\r\n                                        lineNum={1}\r\n                                        placeholder={'Email Address'}\r\n                                        keyboardType = 'email-address'\r\n                                        onChangeText = {content => setEmail(content)}\r\n                                    />\r\n                                    <TouchableOpacity\r\n                                        style={subscriptionStyle.btn}\r\n                                        onPress={()=>SubButton({username,email})}\r\n                                    >\r\n                                        <Text style={subscriptionStyle.text} >Subscribe</Text>\r\n                                    </TouchableOpacity>\r\n                        </View>\r\n                        <View style={subscriptionStyle.textContainer}>\r\n                                <Text style={subscriptionStyle.textDesc}>\r\n                                    Subscribe to our blog website\r\n                                </Text>\r\n                                <Text style={subscriptionStyle.textDesc}>\r\n                                    to stay up-to-date with our constant, never-ending,\r\n                                </Text>\r\n                                <Text style={subscriptionStyle.textDesc}>\r\n                                    Dungeon Discoveries.\r\n                                </Text>\r\n                        </View>\r\n                    </View>\r\n                    {/* <Spacer/> */}\r\n                    <BottomSide/>\r\n                </ScrollView>\r\n            </View>\r\n        </SafeAreaView>\r\n    )\r\n}\r\n\r\nexport default Subscription\r\n\r\n\r\n","import React, { useState } from 'react'\r\nimport { View, Text, TouchableOpacity } from 'react-native'\r\nimport { useRoute } from '@react-navigation/native'\r\nimport { Spacer } from 'react-native-flex-layout'\r\nimport { windowWidth } from '../utils/dimensions'\r\nimport { NavigationBarStyle } from '../utils/app-styles'\r\nimport { useTheme } from '../utils/state-context'\r\n\r\nconst DropdownMenu = ({ options }) => {\r\n    const navBarStyle = NavigationBarStyle()\r\n    return (\r\n        <View style={navBarStyle.dropdownMenu}>\r\n            {options.map((option,index) => (\r\n            <View key={index}>\r\n                <TouchableOpacity style={navBarStyle.dropdownMenuItem} onPress={option.onPress}>\r\n                <Text style={navBarStyle.dropdownMenuItemText}>{option.label}</Text>\r\n                </TouchableOpacity>\r\n                {index < options.length - 1 && <View style={navBarStyle.divider} />}\r\n            </View>\r\n            ))}\r\n        </View>\r\n    )\r\n}\r\n\r\nconst NavigationBar = ({ navigation }) => {\r\n    const navBarStyle = NavigationBarStyle()\r\n    const { token } = useTheme()\r\n    const route = useRoute()\r\n\r\n    const [btnTextWidth, setBtnTextWidth] = useState(0)\r\n\r\n    const onTextLayout = (e) => {\r\n        setBtnTextWidth(e.nativeEvent.layout.width)\r\n    }\r\n    const [showDropdown, setShowDropdown] = useState(false)\r\n\r\n    const handleLogout = () => {\r\n        if (typeof window !== 'undefined' && window.localStorage) {\r\n            // Clear local storage\r\n            localStorage.removeItem('userToken')\r\n            localStorage.removeItem('author')\r\n            localStorage.removeItem('email')\r\n\r\n            // Reload the entire web app\r\n            window.location.reload()\r\n            navigation.replace('/')\r\n        }\r\n    }\r\n\r\n    const dropdownOptions = [\r\n        { label: 'Profile', onPress: () => navigation.navigate('Profile') },\r\n        { label: 'Post Story', onPress: () => navigation.navigate('NewPost')},\r\n        { label: 'My Stories', onPress: () => navigation.navigate('MyBlogs') },\r\n        { label: 'Logout', onPress: handleLogout },\r\n    ]\r\n\r\n    const isActive = (routeName) => route.name === routeName\r\n\r\n    return (\r\n        <View style={navBarStyle.wrapper}>\r\n        <View style={navBarStyle.titleWrapper}>\r\n            <Text style={navBarStyle.title}>Your Story</Text>\r\n        </View>\r\n        {windowWidth > 400 ? (\r\n            <View style={{ width: 50 }} />\r\n        ) : (\r\n            <View style={{ height: 20 }} />\r\n        )}\r\n        <View style={navBarStyle.btnWrapper}>\r\n            <TouchableOpacity\r\n                style={navBarStyle.btn}\r\n                onPress={() => navigation.navigate('Blogs')}\r\n                >\r\n                <Text\r\n                    style={[navBarStyle.btnText, isActive('Blogs') && navBarStyle.activeBtnText]}\r\n                    onLayout={onTextLayout}\r\n                >\r\n                    Home\r\n                </Text>\r\n                {isActive('Blogs') && (\r\n                    <View\r\n                    style={[navBarStyle.activeBtnLine, { width: isActive('Blogs') ? btnTextWidth : 0 }]}\r\n                    />\r\n                )}\r\n                </TouchableOpacity>\r\n            <TouchableOpacity\r\n            style={navBarStyle.btn}\r\n            onPress={() => navigation.navigate('Home')}\r\n            >\r\n            <Text\r\n                style={[navBarStyle.btnText, isActive('Home') && navBarStyle.activeBtnText]}\r\n                onLayout={onTextLayout}\r\n            >\r\n                Stories\r\n            </Text>\r\n            {isActive('Home') && (\r\n                <View\r\n                style={[navBarStyle.activeBtnLine, { width: isActive('Home') ? btnTextWidth : 0 }]}\r\n                />\r\n            )}\r\n            </TouchableOpacity>\r\n            {windowWidth>600 &&\r\n            <TouchableOpacity\r\n            style={navBarStyle.btn}\r\n            onPress={() => navigation.navigate('Subscription')}\r\n            >\r\n            <Text\r\n                style={[navBarStyle.btnText, isActive('Subscription') && navBarStyle.activeBtnText]}\r\n                onLayout={onTextLayout}\r\n            >\r\n                Subscription\r\n            </Text>\r\n            {isActive('Subscription') && (\r\n                <View\r\n                style={[navBarStyle.activeBtnLine, { width: isActive('Subscription') ? btnTextWidth : 0 }]}\r\n                />\r\n            )}\r\n            </TouchableOpacity>\r\n            }\r\n                {\r\n                    token?\r\n                    <TouchableOpacity\r\n                        style={navBarStyle.btn}\r\n                        onPress={() => setShowDropdown(!showDropdown)}\r\n                    >\r\n                        <Text style={navBarStyle.btnText}>Account</Text>\r\n                        {showDropdown && <DropdownMenu options={dropdownOptions} />}\r\n                    </TouchableOpacity>\r\n                    :<TouchableOpacity\r\n                        style={navBarStyle.btnLogin}\r\n                        onPress={()=>navigation.navigate('Login')}\r\n                    >\r\n                        <Text style={navBarStyle.textLogin} >Login</Text>\r\n                    </TouchableOpacity>\r\n                }\r\n        </View>\r\n        </View>\r\n    )\r\n};\r\n\r\nexport default NavigationBar\r\n","import React,{useEffect,useState, useRef} from 'react'\r\nimport {View,SafeAreaView,FlatList,Text,\r\n    ScrollView} from 'react-native'\r\nimport Blog from '../components/blog-content'\r\nimport BlogCard from '../components/blog-card'\r\nimport BottomSide from '../components/bottom-side'\r\nimport axios from 'axios'\r\nimport { windowHeight,windowWidth } from '../utils/dimensions'\r\nimport { BlogReadStyle } from '../utils/app-styles'\r\nimport { Spacer } from 'react-native-flex-layout'\r\nimport { useTheme } from '../utils/state-context'\r\nimport { baseUrl } from '../utils/urls'\r\n\r\n\r\nconst BlogRead = ({route,navigation}) => {\r\n    const [blog, setBlog] = useState([])\r\n    const [owner, setOwner] = useState()\r\n    const [data, setData] = useState([])\r\n    const scrollViewRef = useRef(null)\r\n    const {darkTheme} = useTheme()\r\n\r\n    const blogReadStyle = BlogReadStyle()\r\n    const fetchMainBlog= async()=>{\r\n        await axios.get(`${baseUrl}get_blog/${route.params.id}`)\r\n        .then((response)=>{\r\n            setBlog(response.data)\r\n            setOwner(JSON.stringify(blog.owner, null, 2))\r\n        })\r\n        .catch((err)=> alert(err))\r\n    }\r\n\r\n    const fetchLatests = async()=>{\r\n        await axios.get(`${baseUrl}latest/`)\r\n        .then((response)=>{\r\n            setData(response.data)\r\n        })\r\n        // .catch((err)=> alert(err))\r\n    }\r\n\r\n    useEffect(()=>{\r\n        // alert( JSON.stringify(route.params.id))\r\n        fetchMainBlog()\r\n        fetchLatests()\r\n    }, [route.params.id])\r\n\r\n    useEffect(() => {\r\n        // Scroll the ScrollView to the top when the route parameter changes\r\n        if (scrollViewRef.current) {\r\n            scrollViewRef.current.scrollTo({ y: 0, animated: false })\r\n        }\r\n    }, [route.params.id])\r\n\r\n    if (!blog.owner?.owner_name) {\r\n        return <View\r\n        style=\r\n        {{\r\n            height: windowHeight,\r\n            backgroundColor:darkTheme?'#121212':'#ffffff',\r\n            alignItems: 'center',alignContent:'center'\r\n        }}><Text>Fetching...</Text></View>\r\n    }\r\n\r\n    return(\r\n        <SafeAreaView style={{height: windowHeight,backgroundColor:darkTheme?'#121212':'#ffffff'}}>\r\n            <View>\r\n                <ScrollView\r\n                showsVerticalScrollIndicator={false}\r\n                ref={scrollViewRef}\r\n                >\r\n                    <View style={blogReadStyle.container}>\r\n                        <View>\r\n                            <Blog blog={blog} owner={owner}/>\r\n                        </View>\r\n                        <View style={blogReadStyle.trendingWrapper}>\r\n                            <Text style={blogReadStyle.trendingText}>Popular, Latest Blogs </Text>\r\n                            <View style={{ flexWrap: 'wrap',flexDirection:'row',\r\n                                alignContent: 'space-between',\r\n                                alignItems: 'space-between'}}\r\n                            >\r\n                                <FlatList\r\n                                    data={data}\r\n                                    keyExtractor={(data, index) => index.toString()}\r\n                                    renderItem={({ item }) => <BlogCard data={item}\r\n                                    onPress={\r\n                                        ()=>\r\n                                            {\r\n                                                // navigation.pop()\r\n                                                navigation.navigate('BlogRead',{id:item.id})\r\n                                            }\r\n                                    }/>}\r\n                                    numColumns = {windowWidth>800? 3: 2}\r\n                                />\r\n                            </View>\r\n                        </View>\r\n                        <Spacer/>\r\n                        <BottomSide/>\r\n                    </View>\r\n                </ScrollView>\r\n            </View>\r\n        </SafeAreaView>\r\n    )\r\n}\r\n\r\nexport default BlogRead\r\n","import { NavigationContainer } from \"@react-navigation/native\"\r\nimport * as Linking from \"expo-linking\"\r\n\r\nconst linking = {\r\n    prefixes: [\r\n        'https://yourstory.co.ke/',\r\n        'http://localhost:19006/',\r\n        'http://127.0.0.1:8000/',\r\n        // Linking.createURL(\"/\")\r\n    ],\r\n    config: {\r\n        screens: {\r\n            Blogs: \"/\",\r\n        //  ... other screens\r\n        BlogRead: \"blog/:id\",\r\n        Login: \"login/\",\r\n        Register: \"register/\",\r\n        Home: 'Home/',\r\n        MyBlogs: 'MyBlogs/',\r\n        },\r\n    },\r\n};\r\n\r\nexport default linking","import React,{useEffect,useState} from 'react'\r\nimport {Svg,Circle} from 'react-native-svg'\r\n\r\nconst CircularProgressIndicator = ({ radius, strokeWidth, progress })=>{\r\n        const circumference = 2 * Math.PI * radius;\r\n        const [offset, setOffset] = useState(circumference)\r\n\r\n    useEffect(() => {\r\n        const progressOffset = ((100 - progress) / 100) * circumference\r\n        setOffset(progressOffset)\r\n    }, [progress, circumference])\r\n\r\n    return (\r\n        <Svg width={radius * 2} height={radius * 2}>\r\n            <Circle\r\n            cx={radius}\r\n            cy={radius}\r\n            r={radius - strokeWidth / 2}\r\n            fill=\"transparent\"\r\n            stroke=\"#E1E1E1\" // Background color\r\n            strokeWidth={strokeWidth}\r\n            />\r\n            <Circle\r\n                cx={radius}\r\n                cy={radius}\r\n                r={radius - strokeWidth / 2}\r\n                fill=\"transparent\"\r\n                stroke='#63bde1' // Progress color\r\n                strokeWidth={strokeWidth}\r\n                strokeDasharray={circumference}\r\n                strokeDashoffset={offset}\r\n            />\r\n        </Svg>\r\n    )\r\n}\r\n\r\nexport default CircularProgressIndicator","import React,{useState, useEffect} from 'react'\r\nimport {View,Text,SafeAreaView, TouchableOpacity, ScrollView} from 'react-native'\r\n// import { AsyncStorage } from 'react-native'\r\nimport { windowWidth } from '../utils/dimensions'\r\nimport BottomSide from '../components/bottom-side'\r\nimport FormData from 'form-data'\r\nimport axios from 'axios'\r\nimport CredentialFormInput from '../components/credentialsFormComponent'\r\nimport { useTheme } from '../utils/state-context'\r\nimport { LoginStyle } from '../utils/app-styles'\r\nimport CircularProgressIndicator from '../components/progress-indicator'\r\nimport { baseUrl } from '../utils/urls'\r\n\r\nconst LoginScreen = ({navigation}) => {\r\n    //initializing the styles\r\n    const loginStyle = LoginStyle()\r\n    //hooks for email and password\r\n    const [password, setPassword] = useState('')\r\n    const [email, setEmail] = useState('')\r\n\r\n    //set alert notification\r\n    const [notification,setNotification] = useState('')\r\n    //showing loader\r\n    const [isProgress,setIsProgress] = useState(false)\r\n    //progress setter\r\n    const [progress, setProgress] = useState(0)\r\n    // useTheme\r\n    const {setToken, setAuthor, setEmailAccess} = useTheme()\r\n    //progress timer\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n        setProgress((prevProgress) => (prevProgress + 1) % 101)\r\n        }, 30)\r\n        return () => {\r\n        clearInterval(interval)\r\n        }\r\n    }, [])\r\n\r\n    const data = new FormData()\r\n\r\n    //posts the request to the backend\r\n    const LoginButton=async({password,email})=>{\r\n        setIsProgress(true)\r\n        data.append('email', email)\r\n        data.append('password', password)\r\n        await axios.post(`${baseUrl}login/`,data)\r\n        .then((response)=>{\r\n            if (typeof window !== 'undefined' && window.localStorage) {\r\n                localStorage.setItem('userToken', response.data.token)\r\n                localStorage.setItem('author', response.data.username)\r\n                localStorage.setItem('email', response.data.email)\r\n                setToken(response.data.token)\r\n                setAuthor(response.data.username)\r\n                setEmailAccess(response.data.email)\r\n                // Reload the entire web app\r\n                try{\r\n                    window.location.reload()\r\n                }finally{\r\n                    navigation.goBack()\r\n                }\r\n                // window.location.reload()\r\n            }\r\n        })\r\n        .catch((err)=> {\r\n            setIsProgress(false)\r\n            if(err.response.status===401){\r\n                setNotification('Wrong email or password')\r\n            }else if(err.response.status===500){\r\n                setNotification('There is a problem with the server')\r\n            }else{\r\n                setNotification('A problem Occurred, wait for fixing!')\r\n            }\r\n        })\r\n    }\r\n    return(\r\n        <SafeAreaView>\r\n            <View style ={loginStyle.container}>\r\n                <ScrollView>\r\n                    <View style={loginStyle.topContainer}>\r\n                        <View style={{ width: windowWidth>800?100:windowWidth>400? 50: 20}}/>\r\n                        <View style={loginStyle.boxContainer}>\r\n                                <CredentialFormInput\r\n                                    title={'Email:'}\r\n                                    label={email}\r\n                                    lineNum={1}\r\n                                    placeholder={'Email Address'}\r\n                                    keyboardType = 'email-address'\r\n                                    onChangeText = {content => setEmail(content)}\r\n                                />\r\n                                <CredentialFormInput\r\n                                    title={'Password:'}\r\n                                    label={password}\r\n                                    lineNum={1}\r\n                                    secureTextEntry = {true}\r\n                                    placeholder={'A-Z,a-z,0-9,{!@#}'}\r\n                                    onChangeText = {content => setPassword(content)}\r\n                                />\r\n                                <View>\r\n                                    {isProgress?\r\n                                    <CircularProgressIndicator\r\n                                        radius={25}\r\n                                        strokeWidth={10}\r\n                                        progress={progress}\r\n                                    />:notification===''?\r\n                                    <Text style={loginStyle.textDesc}>\r\n                                        Press Login Button to gain Access\r\n                                    </Text>:\r\n                                    <Text style={loginStyle.textDesc}>\r\n                                        {notification}\r\n                                    </Text>\r\n                                    }\r\n                                    <TouchableOpacity\r\n                                        onPress={()=>navigation.navigate('Register')}\r\n                                    >\r\n                                        <Text style={loginStyle.registerText}>Create an Account | Register</Text>\r\n                                    </TouchableOpacity>\r\n                                </View>\r\n                                <TouchableOpacity\r\n                                    style={loginStyle.btn}\r\n                                    onPress={()=>LoginButton({password,email})}\r\n                                >\r\n                                    <Text style={loginStyle.text} >Login</Text>\r\n                                </TouchableOpacity>\r\n                        </View>\r\n                        <View style={loginStyle.textContainer}>\r\n                            <Text style={loginStyle.textDesc}>\r\n                                To have access to the website,\r\n                            </Text>\r\n                            <Text style={loginStyle.textDesc}>\r\n                                Input your credentials.\r\n                            </Text>\r\n                        </View>\r\n                    </View>\r\n                    <BottomSide/>\r\n                </ScrollView>\r\n            </View>\r\n        </SafeAreaView>\r\n    )\r\n}\r\n\r\nexport default LoginScreen","import React,{useState} from 'react'\r\nimport { SafeAreaView,View, Text,TouchableOpacity,Image, ScrollView} from 'react-native'\r\nimport FormInput from '../components/formInput'\r\nimport BottomSide from '../components/bottom-side'\r\nimport { NewMultipleStyle } from '../utils/app-styles'\r\nimport * as ImagePicker from 'expo-image-picker'\r\nimport { windowWidth } from '../utils/dimensions'\r\n\r\n\r\nconst NewPostMultiple=({navigation})=>{\r\n    //initializing the styles\r\n    const newMultipleStyle = NewMultipleStyle()\r\n    // data to upload to post api endpoint\r\n    const [title, setTitle] = useState('')\r\n    const [file, setFile] = useState(null)\r\n    const [content, setContent] = useState([\r\n        { type: 'paragraph', text: '' }, // Initial empty paragraph\r\n    ])\r\n    const [selectedImages, setSelectedImages] = useState([])\r\n    const [imageCopyRight,setImageCopyRight] = useState('')\r\n\r\n    //add paragraph to contents\r\n    const handleAddParagraph=()=>{\r\n        setContent([...content,{type:'paragraph',text:''}])\r\n    }\r\n    //handling changes in paragraphs\r\n    const handleParagraphChange =(index,text)=>{\r\n        const updatedContent = [...content]\r\n        updatedContent[index].text = text\r\n        setContent(updatedContent)\r\n    }\r\n\r\n\r\n    //adds images to content\r\n    const handleFileChange = (image,isMainImage) => {\r\n        const selectedFile = image.target.files[0]\r\n        if (selectedFile) {\r\n             //add main Image\r\n            if(isMainImage){\r\n                setFile(selectedFile)\r\n            }\r\n        }\r\n    }\r\n    const selectImages = async () => {\r\n        const result = await ImagePicker.launchImageLibraryAsync({\r\n            mediaTypes: ImagePicker.MediaTypeOptions.Images,\r\n            allowsEditing: true,\r\n            aspect: [4, 3],\r\n            quality: 1,\r\n            allowsMultipleSelection: true,\r\n        })\r\n        if (!result.canceled) {\r\n            setSelectedImages([...selectedImages, result])\r\n        }\r\n    }\r\n\r\n    const ImageSelector=()=>{\r\n        return (\r\n            <View>\r\n                <TouchableOpacity\r\n                    style={newMultipleStyle.btn}\r\n                    onPress={selectImages}\r\n                >\r\n                    <Text style={newMultipleStyle.btnText}>Select content images</Text>\r\n                </TouchableOpacity>\r\n            </View>\r\n        )\r\n    }\r\n\r\n    const deleteImage = (index) => {\r\n        const newImages = [...selectedImages]\r\n        newImages.splice(index, 1)\r\n        setSelectedImages(newImages)\r\n    }\r\n\r\n    const deleteStory=()=>{\r\n        setContent([{ type: 'paragraph', text: '' }]),\r\n        setFile(null)\r\n        setTitle('')\r\n        setSelectedImages([])\r\n        setImageCopyRight('')\r\n        navigation.replace('MyBlogs')\r\n    }\r\n\r\n    return(\r\n        <SafeAreaView>\r\n            <ScrollView\r\n            showsVerticalScrollIndicator={false}\r\n            >\r\n                <View>\r\n                    <View style={newMultipleStyle.container}>\r\n                        {windowWidth<=600 && <View style={{ flexDirection: 'row',\r\n                        alignContent: 'center', alignItems: 'center'\r\n                        }} >\r\n                            <TouchableOpacity\r\n                            style={newMultipleStyle.btn}\r\n                            onPress={\r\n                                ()=>{\r\n                                    if(title!==''&& content!==''&& imageCopyRight!=='' && file!==null){\r\n                                        navigation.navigate('Preview',\r\n                                        {\r\n                                            title:title,content: content,\r\n                                            imageCopyRight:imageCopyRight,file: file,selectedImages: selectedImages\r\n                                        })\r\n                                    }\r\n                                    else{\r\n                                        alert('Add all Entries')\r\n                                    }\r\n                                }\r\n                            }\r\n                                >\r\n                                <Text style={newMultipleStyle.btnText}>Preview</Text>\r\n                            </TouchableOpacity>\r\n                            <TouchableOpacity\r\n                            style={newMultipleStyle.btn}\r\n                            onPress={deleteStory}\r\n                            >\r\n                                <Text style={newMultipleStyle.btnText}>Discard</Text>\r\n                            </TouchableOpacity>\r\n                        </View>}\r\n                        <View style={newMultipleStyle.contentWrapper}>\r\n                            {/* sets the title of the blog */}\r\n                            <View>\r\n                                <FormInput\r\n                                title={'Blog Title:'}\r\n                                label={title}//title data viewing\r\n                                lineNum={windowWidth> 600?1:2}\r\n                                placeholder={'the story title here'}\r\n                                onChangeText = {(content) => setTitle(content)}//setting up title\r\n                                />\r\n                            </View>\r\n                            {\r\n                                windowWidth<=600 &&\r\n                                <View>\r\n                                    {/* component to handle upload of main main Landing Image */}\r\n                                    <label htmlFor=\"file-input\" style={newMultipleStyle.uploadButton}>\r\n                                        Select Landing Image\r\n                                    </label>\r\n                                    <input\r\n                                        type=\"file\"\r\n                                        accept=\"image/*\"\r\n                                        id=\"file-input\"\r\n                                        style={newMultipleStyle.input}\r\n                                        onChange={(event)=> handleFileChange(event,true)}\r\n                                    />\r\n                                    {/* displays the main Image for preview */}\r\n                                    {file &&\r\n                                    <Image source={{ uri: URL.createObjectURL(file) }} style={{ width: 200, height: 200 }} />}\r\n                                    <TouchableOpacity onPress={() => setFile(null)}>\r\n                                        <Text style={newMultipleStyle.btnText}>Clear</Text>\r\n                                    </TouchableOpacity>\r\n                                </View>\r\n                            }\r\n                            {/* first part of the content */}\r\n                            <View>\r\n                                <FormInput\r\n                                title={'Image copy-Right:'}\r\n                                lineNum={windowWidth> 600?1:2}\r\n                                label={imageCopyRight}// imageCopyright data viewing\r\n                                placeholder={'write the source of the image'}\r\n                                onChangeText= {(content)=> setImageCopyRight(content)}//setting up imageCopyright\r\n                                />\r\n                            </View>\r\n                            {\r\n                                windowWidth<=600 &&\r\n                                <ImageSelector/>\r\n                            }\r\n                            {/* displays the text paragraphs and images */}\r\n                            <ScrollView horizontal>\r\n                                {selectedImages.map((image, index) => (\r\n                                    <View>\r\n                                        <Image key={index} source={{ uri:image.assets[0].uri }} style={{ width: 100, height: 100, marginRight: 10 }} />\r\n                                        <TouchableOpacity\r\n                                            style={newMultipleStyle.btn}\r\n                                            onPress={() => deleteImage(index)}\r\n                                        >\r\n                                            <Text style={newMultipleStyle.btnText}>Delete</Text>\r\n                                        </TouchableOpacity>\r\n                                    </View>\r\n                                ))}\r\n                            </ScrollView>\r\n                            {content.map((item, index) => {\r\n                                if (item.type === 'paragraph') {\r\n                                    return (\r\n                                    <FormInput\r\n                                        key={index}\r\n                                        title={`Section ${index + 1}:`}\r\n                                        lineNum={windowWidth> 600? 8: 10}\r\n                                        label={item.text}\r\n                                        placeholder={`Write Section ${index + 1} here`}\r\n                                        onChangeText={(text) => handleParagraphChange(index, text)}\r\n                                    />\r\n                                    );\r\n                                }\r\n                                })\r\n                            }\r\n                            {\r\n                                windowWidth<600&&\r\n                                <TouchableOpacity\r\n                                onPress={handleAddParagraph}\r\n                                style={newMultipleStyle.btn}\r\n                                >\r\n                                    <Text style={newMultipleStyle.btnText}>Add Section</Text>\r\n                                </TouchableOpacity>\r\n                            }\r\n                        </View>\r\n                        {/* Component for preview and discard sections */}\r\n                        {windowWidth>600 && <View style={newMultipleStyle.otherWrapper}>\r\n                            {/* button that validates and navigates for the outcome preview */}\r\n                            <TouchableOpacity\r\n                            style={newMultipleStyle.btn}\r\n                            onPress={\r\n                                ()=>{\r\n                                    if(title!==''&& content!==''&& imageCopyRight!=='' && file!==null){\r\n                                        navigation.navigate('Preview',\r\n                                        {\r\n                                            title:title,content: content,\r\n                                            imageCopyRight:imageCopyRight,file: file,selectedImages: selectedImages\r\n                                        })\r\n                                    }\r\n                                    else{\r\n                                        alert('Add all Entries')\r\n                                    }\r\n                                }\r\n                            }\r\n                                >\r\n                                <Text style={newMultipleStyle.btnText}>Preview</Text>\r\n                            </TouchableOpacity>\r\n                            {/* button to discard the post */}\r\n                            {/* component to handle upload of the multiple content images */}\r\n                            <ImageSelector/>\r\n                            {/* button to add paragraph */}\r\n                            <TouchableOpacity\r\n                            onPress={handleAddParagraph}\r\n                            style={newMultipleStyle.btn}\r\n                            >\r\n                                <Text style={newMultipleStyle.btnText}>Add Section</Text>\r\n                            </TouchableOpacity>\r\n                            <View>\r\n                                {/* component to handle upload of main main Landing Image */}\r\n                                <label htmlFor=\"file-input\" style={newMultipleStyle.uploadButton}>\r\n                                    Select Landing Image\r\n                                </label>\r\n                                <input\r\n                                    type=\"file\"\r\n                                    accept=\"image/*\"\r\n                                    id=\"file-input\"\r\n                                    style={newMultipleStyle.input}\r\n                                    onChange={(event)=> handleFileChange(event,true)}\r\n                                />\r\n                                {/* displays the main Image for preview */}\r\n                                {file &&\r\n                                <Image source={{ uri: URL.createObjectURL(file) }} style={{ width: 200, height: 200 }} />}\r\n                                <TouchableOpacity onPress={() => setFile(null)}>\r\n                                    <Text style={newMultipleStyle.btnText}>Clear</Text>\r\n                                </TouchableOpacity>\r\n                            </View>\r\n                            <TouchableOpacity\r\n                            style={newMultipleStyle.btn}\r\n                            onPress={deleteStory}\r\n                            >\r\n                                <Text style={newMultipleStyle.btnText}>Discard</Text>\r\n                            </TouchableOpacity>\r\n                        </View>}\r\n                    </View>\r\n                    <BottomSide/>\r\n                </View>\r\n            </ScrollView>\r\n        </SafeAreaView>\r\n    )\r\n}\r\n\r\nexport default NewPostMultiple","//describes the title, image and content paragraphs layout visible to the customers.\r\n//styling is described below the component.\r\nimport React from 'react'\r\nimport {View, Text,Image, ScrollView} from 'react-native'\r\nimport { windowWidth } from '../utils/dimensions'\r\nimport { Ionicons } from '@expo/vector-icons'\r\nimport { BlogContentPreviewStyle } from '../utils/app-styles'\r\n\r\n\r\nfunction PreviewBlogContent({title,content,imageCopyRight,file,selectedImages}){\r\n    //initializing styles\r\n    const blogContentPreviewStyle = BlogContentPreviewStyle()\r\n    //date management\r\n    const monthNames = [\r\n        \"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\r\n        \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\r\n    ]\r\n\r\n    const mergedContent = [];\r\n    for (let i = 0; i < Math.max(selectedImages.length, content.length); i++) {\r\n        if (i < content.length) {\r\n            mergedContent.push({ type: 'story', data: content[i] });\r\n            }\r\n        if (i < selectedImages.length) {\r\n        mergedContent.push({ type: 'image', data: selectedImages[i] });\r\n        }\r\n    }\r\n\r\n    return(\r\n        <View style={blogContentPreviewStyle.container}>\r\n            {/* Upper Wrapper */}\r\n            <View style={blogContentPreviewStyle.upperWrapper}>\r\n                <View style={blogContentPreviewStyle.bioWrapper}>\r\n                    <View style={{ width: windowWidth>800?200:150 }}>\r\n                        <Text style={blogContentPreviewStyle.title}>\r\n                            {title}\r\n                        </Text>\r\n                    </View>\r\n                    <View>\r\n                        <Ionicons name='person-circle-outline'\r\n                        size={windowWidth>800?50:30} />\r\n                    </View>\r\n                </View>\r\n                <View style= {blogContentPreviewStyle.imgWrapper}>\r\n                    <Image source={{ uri: URL.createObjectURL(file) }} style={blogContentPreviewStyle.img} />\r\n                    <Text style={blogContentPreviewStyle.imgCopyrightText}>{imageCopyRight}</Text>\r\n                </View>\r\n            </View>\r\n            {/* Lower Wrapper */}\r\n            <View style={blogContentPreviewStyle.lowerWrapper}>\r\n                {mergedContent.map((item, index) => (\r\n                    <View key={index}>\r\n                        {item.type === 'story' && (\r\n                            <Text key={index} style={blogContentPreviewStyle.contentText}>\r\n                            {item.data.text}\r\n                            </Text>\r\n                        )}\r\n                        {item.type === 'image' && (\r\n                            <Image\r\n                            source={{ uri: item.data.assets[0].uri }}\r\n                            // style={{ width: 100, height: 100, marginRight: 10 }}\r\n                            style={blogContentPreviewStyle.img}\r\n                            />\r\n                        )}\r\n                    </View>\r\n                ))}\r\n            </View>\r\n        </View>\r\n    )\r\n}\r\n\r\nexport default PreviewBlogContent","import React,{useEffect,useState} from 'react'\r\nimport { SafeAreaView,View, Text,TouchableOpacity, ScrollView} from 'react-native'\r\nimport BottomSide from '../components/bottom-side'\r\nimport PreviewBlogContent from '../components/blog-preview-component'\r\nimport FormData from 'form-data'\r\nimport axios from 'axios'\r\nimport { useTheme } from '../utils/state-context'\r\nimport { BlogPreviewStyle } from '../utils/app-styles'\r\nimport { baseUrl } from '../utils/urls'\r\n\r\n\r\n\r\nconst NewPostPreview=({navigation,route})=>{\r\n    //initializing styles\r\n    const blogPreviewStyle = BlogPreviewStyle()\r\n    //get necessary data from route params\r\n    const{title, content, imageCopyRight,file,selectedImages} = route.params\r\n    //initializing the token\r\n    const {token} = useTheme()\r\n    // set for form-data post format\r\n    const data = new FormData()\r\n    //adding values to be upload to the api endpoint\r\n    data.append('title',title)\r\n    // data.append('story',content)\r\n    content.forEach((section, index) => {\r\n        data.append('story', section.text)\r\n    })\r\n    data.append('frontImage',file)\r\n    data.append('imageCopyRight',imageCopyRight)\r\n\r\n    selectedImages.forEach(async (image, index) => {\r\n        try{\r\n            // Use regex to extract the MIME type\r\n            const mimeTypeMatch = image.assets[0].uri.match(/^data:(image\\/\\w+);base64,/)\r\n            //fetching the blob\r\n            const response = await fetch(image.assets[0].uri)\r\n            const blob = await response.blob()\r\n            if (mimeTypeMatch) {\r\n                const mimeType = mimeTypeMatch[1].split('/').pop()\r\n                const filename = `image_${index}.${mimeType}`\r\n                // appending the image\r\n                data.append('contentImages',blob,filename)\r\n            }\r\n        }catch(err){\r\n            //display an error\r\n            alert(err.message)\r\n        }\r\n    })\r\n\r\n    const postBlog = async()=>{\r\n        await axios.post(`${baseUrl}create/`,data,\r\n        {\r\n            headers:{Authorization: `Token ${token}`,'Content-Type': 'multipart/form-data'},\r\n        })\r\n        .then((response)=>{\r\n            alert(`Successfully created blog ${title}`)\r\n            navigation.replace('MyBlogs')\r\n        }).catch((err)=>{\r\n            alert(err.message)\r\n        })\r\n    }\r\n    return(\r\n        <SafeAreaView>\r\n            <View>\r\n                <ScrollView\r\n                style={ blogPreviewStyle.container }\r\n                showsVerticalScrollIndicator={true}\r\n                >\r\n                    <View>\r\n                        <View style={blogPreviewStyle.container}>\r\n                            <View style={{ alignItems: 'flex-start' }}>\r\n                                <TouchableOpacity\r\n                                    style={blogPreviewStyle.btn}\r\n                                    onPress={postBlog}\r\n                                    >\r\n                                        <Text style={blogPreviewStyle.btnText}>Post</Text>\r\n                                </TouchableOpacity>\r\n                                <View style={blogPreviewStyle.contentWrapper}>\r\n                                    <PreviewBlogContent\r\n                                        title={title} content={content}\r\n                                        imageCopyRight={imageCopyRight}\r\n                                        file={file} selectedImages={selectedImages}\r\n                                    />\r\n                                </View>\r\n                            </View>\r\n                        </View>\r\n                        <BottomSide/>\r\n                    </View>\r\n                </ScrollView>\r\n            </View>\r\n        </SafeAreaView>\r\n    )\r\n}\r\n\r\nexport default NewPostPreview\r\n","import React,{useState, useEffect} from 'react'\r\nimport {View,Text, TouchableOpacity, ScrollView} from 'react-native'\r\nimport { windowWidth } from '../utils/dimensions'\r\nimport BottomSide from '../components/bottom-side'\r\nimport FormData from 'form-data'\r\nimport axios from 'axios'\r\nimport CredentialFormInput from '../components/credentialsFormComponent'\r\nimport { useTheme } from '../utils/state-context'\r\nimport { LoginStyle } from '../utils/app-styles'\r\nimport CircularProgressIndicator from '../components/progress-indicator'\r\nimport { baseUrl } from '../utils/urls'\r\n\r\nconst RegisterScreen = ({navigation}) => {\r\n    //initializing the styles\r\n    const loginStyle = LoginStyle()\r\n    //hooks for email and password\r\n    const [password, setPassword] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const[username, setUsername] = useState('')\r\n    const [description, setDescription] = useState('New User')\r\n\r\n    //set alert notification\r\n    const [notification,setNotification] = useState('')\r\n    //showing loader\r\n    const [isProgress,setIsProgress] = useState(false)\r\n    //progress setter\r\n    const [progress, setProgress] = useState(0)\r\n    // useTheme\r\n    const {setToken, setAuthor, setEmailAccess} = useTheme()\r\n\r\n    //progress timer\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n        setProgress((prevProgress) => (prevProgress + 1) % 101)\r\n        }, 30)\r\n        return () => {\r\n        clearInterval(interval)\r\n        }\r\n    }, [])\r\n\r\n    const data = new FormData()\r\n\r\n    //posts the request to the backend\r\n    const RegisterButton=async({password,email})=>{\r\n        setIsProgress(true)\r\n        data.append('email', email)\r\n        data.append('username',username)\r\n        data.append('description',description)\r\n        data.append('password', password)\r\n        await axios.post(`${baseUrl}register_user/`,data)\r\n        .then((response)=>{\r\n            if (typeof window !== 'undefined' && window.localStorage) {\r\n                localStorage.setItem('userToken', response.data.token)\r\n                localStorage.setItem('author', response.data.username)\r\n                localStorage.setItem('email', response.data.email)\r\n                setToken(response.data.token)\r\n                setAuthor(response.data.username)\r\n                setEmailAccess(response.data.email)\r\n                // Reload the entire web app\r\n                try{\r\n                    window.location.reload()\r\n                }finally{\r\n                    navigation.goBack()\r\n                }\r\n            }\r\n\r\n        })\r\n        .catch((err)=> {\r\n            setIsProgress(false)\r\n            if(err.response.status===501){\r\n                setNotification('Failed to Register User')\r\n            }else if(err.response.status===500){\r\n                setNotification('There is a problem with the server')\r\n            }else{\r\n                setNotification(JSON.stringify(err.response.data))\r\n            }\r\n        })\r\n    }\r\n    return(\r\n            <View style ={loginStyle.container}>\r\n                <ScrollView>\r\n                    <View style={loginStyle.topContainer}>\r\n                        <View style={{ width: windowWidth>800?100:windowWidth>400? 50: 20}}/>\r\n                        <View style={loginStyle.boxContainer}>\r\n                                <CredentialFormInput\r\n                                    title={'User Name:'}\r\n                                    label={username}\r\n                                    lineNum={1}\r\n                                    placeholder={'Username'}\r\n                                    onChangeText = {content => setUsername(content)}\r\n                                />\r\n                                <CredentialFormInput\r\n                                    title={'Email:'}\r\n                                    label={email}\r\n                                    lineNum={1}\r\n                                    placeholder={'Email Address'}\r\n                                    keyboardType = 'email-address'\r\n                                    onChangeText = {content => setEmail(content)}\r\n                                />\r\n                                <CredentialFormInput\r\n                                    title={'Description:'}\r\n                                    label={description}\r\n                                    lineNum={1}\r\n                                    placeholder={description}\r\n                                    onChangeText = {content => setDescription(content)}\r\n                                />\r\n                                <CredentialFormInput\r\n                                    title={'Password:'}\r\n                                    label={password}\r\n                                    lineNum={1}\r\n                                    secureTextEntry = {true}\r\n                                    placeholder={'A-Z,a-z,0-9,{!@#}'}\r\n                                    onChangeText = {content => setPassword(content)}\r\n                                />\r\n                                <View>\r\n                                    {isProgress?\r\n                                    <CircularProgressIndicator\r\n                                        radius={25}\r\n                                        strokeWidth={10}\r\n                                        progress={progress}\r\n                                    />:notification===''?\r\n                                    <Text style={loginStyle.textDesc}>\r\n                                        Press Register Button to create an Account\r\n                                    </Text>:\r\n                                    <Text style={loginStyle.textDesc}>\r\n                                        {notification}\r\n                                    </Text>\r\n                                    }\r\n                                </View>\r\n                                <TouchableOpacity\r\n                                    style={loginStyle.btn}\r\n                                    onPress={()=>RegisterButton({password,email})}\r\n                                >\r\n                                    <Text style={loginStyle.text} >Register</Text>\r\n                                </TouchableOpacity>\r\n                        </View>\r\n                        <View style={loginStyle.textContainer}>\r\n                            <Text style={loginStyle.textDesc}>\r\n                                To have access to the website,\r\n                            </Text>\r\n                            <Text style={loginStyle.textDesc}>\r\n                                Input your credentials.\r\n                            </Text>\r\n                        </View>\r\n                    </View>\r\n                    <BottomSide/>\r\n                </ScrollView>\r\n            </View>\r\n    )\r\n}\r\n\r\nexport default RegisterScreen","// this component is a card that describes the layout of the blogs card\r\n// its style is defined inside this file with imported dimensions\r\n\r\nimport React from 'react'\r\nimport {View, Text,TouchableOpacity,Image} from 'react-native'\r\nimport { BlogCardStyle,BlogContentStyle } from '../utils/app-styles'\r\nimport { useTheme } from '../utils/state-context'\r\nimport FormData from 'form-data'\r\nimport axios from 'axios'\r\nimport { baseUrl, baseUrlImage } from '../utils/urls'\r\n\r\n\r\nconst ExecuteCard=({onPress,data})=>{\r\n    // const  nav = useNavigation()\r\n    const styles = BlogCardStyle()\r\n    const blogContentStyle = BlogContentStyle()\r\n    const {token} = useTheme()\r\n\r\n    //date management\r\n    const monthNames = [\r\n        \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\",\r\n        \"Jul\", \"Aug\", \"Sept\", \"Oct\", \"Nov\", \"Dec\"\r\n    ]\r\n    const dateObject = new Date(data.created_at)\r\n    const year = dateObject.getFullYear()\r\n    const month = dateObject.getMonth()\r\n    const day = dateObject.getDate()\r\n    // converts story object to string\r\n    const content = data.story\r\n    // set for form-data post format\r\n    const formData= new FormData()\r\n    formData.append('id',data.id)\r\n\r\n    const deleteBlog = async()=>{\r\n        // alert(formData)\r\n        await axios.delete(\r\n            `${baseUrl}delete/`,\r\n            // formData,\r\n            {\r\n                headers:\r\n                {\r\n                    Authorization: `Token ${token}`,\r\n                    // 'Content-Type': 'multipart/form-data',\r\n                },\r\n                data: formData,\r\n            }\r\n        ).then((response)=>{\r\n            alert(response.data)\r\n            navigation.replace('MyBlogs')\r\n        }).catch((err)=>{\r\n            alert(err)\r\n        })\r\n    }\r\n    return(\r\n        <View style={styles.container} key={data.id}>\r\n            <Image source={{ uri: `${baseUrlImage}${data.frontImage}` }} style={styles.img}/>\r\n            <TouchableOpacity\r\n            onPress={onPress}\r\n            >\r\n                <Text style={styles.txt}>{data.title}</Text>\r\n                <Text style = {blogContentStyle.contentText}>\r\n                    {`By ${data?.owner?.owner_name}`}\r\n                </Text>\r\n                <Text style={{ ...blogContentStyle.editorText,fontWeight: 'bold' }}>\r\n                    {`.  ${Math.ceil(content[0].story.length/1500*content.length)} min Read  .  ${day} ${monthNames[month]}, ${year} `}\r\n                </Text>\r\n            </TouchableOpacity>\r\n            <View>\r\n                <TouchableOpacity style={styles.btn} onPress={deleteBlog}>\r\n                    <Text style={styles.btnText}>Delete</Text>\r\n                </TouchableOpacity>\r\n            </View>\r\n        </View>\r\n    )\r\n}\r\nexport default ExecuteCard\r\n","import React,{useEffect, useState} from 'react'\r\nimport {View,Text,ScrollView,\r\n    TouchableOpacity,FlatList} from 'react-native'\r\nimport { windowWidth } from '../utils/dimensions'\r\nimport BottomSide from '../components/bottom-side'\r\nimport axios from 'axios'\r\nimport {useTheme } from '../utils/state-context'\r\nimport { HomeStyle} from '../utils/app-styles'\r\nimport ExecuteCard from '../components/execute-card'\r\nimport { baseUrl } from '../utils/urls'\r\n\r\n\r\nconst MyBlogs=({navigation})=>{\r\n    // initializing styles\r\n    const homeStyle = HomeStyle()\r\n    //fetch token\r\n    const {token} = useTheme()\r\n    //hooks for storing data\r\n    const [data, setData] = useState([])\r\n    const [blogs, setBlogs] = useState([])\r\n\r\n    const fetchStatistics = async()=>{\r\n        await axios.get(`${baseUrl}statistics/`,{\r\n            headers:{\r\n                Authorization: `Token ${token}`,\r\n                // 'Content-Type': 'multipart/form-data'\r\n            },\r\n        })\r\n        .then((response)=>{\r\n            setData(response.data)\r\n        })\r\n        .catch((err)=> alert(err.message))\r\n    }\r\n    const fetchBlogs= async()=>{\r\n        await axios.get(`${baseUrl}user_blogs/`,{\r\n            headers:{\r\n                Authorization: `Token ${token}`,\r\n                // 'Content-Type': 'multipart/form-data'\r\n            },\r\n        })\r\n        .then((response)=>{\r\n            setBlogs(response.data)\r\n        })\r\n        .catch((err)=> alert(err))\r\n    }\r\n    useEffect(()=>{\r\n        fetchBlogs()\r\n        fetchStatistics()\r\n    }, [])\r\n    return(\r\n            <View>\r\n                <ScrollView\r\n                showsVerticalScrollIndicator={false}\r\n                >\r\n                <View style={homeStyle.contentWrapper}>\r\n                    <View style={homeStyle.container}>\r\n                        <View >\r\n                            <View style={homeStyle.upperWrapper}>\r\n                                <View>\r\n                                    <Text style={homeStyle.title}>\r\n                                        Blog Performance Overall\r\n                                    </Text>\r\n                                </View>\r\n                                <View style={{ flexDirection: 'row' }}>\r\n                                    <View style={homeStyle.btnWrapper}>\r\n                                        <TouchableOpacity\r\n                                        style={homeStyle.btn}\r\n                                        >\r\n                                            <Text style={homeStyle.preText}>\r\n                                                Monthly Traffic:\r\n                                            </Text>\r\n                                            <Text style={homeStyle.btnText}>\r\n                                                {` ${data.total_views}`}\r\n                                            </Text>\r\n                                        </TouchableOpacity>\r\n                                    </View>\r\n                                    <View style={homeStyle.btnWrapper}>\r\n                                        <TouchableOpacity\r\n                                        style={homeStyle.btn}\r\n                                        >\r\n                                            <Text style={homeStyle.preText}>\r\n                                                Total Blogs:\r\n                                            </Text>\r\n                                            <Text style={homeStyle.btnText}>\r\n                                                {` ${data.blogs}`}\r\n                                            </Text>\r\n                                        </TouchableOpacity>\r\n                                    </View>\r\n                                </View>\r\n                                <View style={{ flexDirection: 'row' }}>\r\n                                    <View style={homeStyle.btnWrapper}>\r\n                                        <TouchableOpacity\r\n                                        style={homeStyle.btn}\r\n                                        >\r\n                                            <Text style={homeStyle.preText}>\r\n                                                Total Votes:\r\n                                            </Text>\r\n                                            <View style={{ flexDirection: 'row' }}>\r\n                                                <View style={{flexDirection: 'row', margin: 10 }}>\r\n                                                    <Text style={homeStyle.preText}>\r\n                                                        Likes:\r\n                                                    </Text>\r\n                                                    <Text style={homeStyle.btnText}>\r\n                                                        {` ${data.likes}`}\r\n                                                    </Text>\r\n                                                </View>\r\n                                                <View style={{flexDirection: 'row', margin: 10 }}>\r\n                                                    <Text style={homeStyle.preText}>\r\n                                                        Dislikes:\r\n                                                    </Text>\r\n                                                    <Text style={homeStyle.btnText}>\r\n                                                        {` ${data.dislikes}`}\r\n                                                    </Text>\r\n                                                </View>\r\n                                            </View>\r\n                                        </TouchableOpacity>\r\n                                    </View>\r\n                                    <View style={homeStyle.btnWrapper}>\r\n                                        <TouchableOpacity\r\n                                        style={homeStyle.btn}\r\n                                        >\r\n                                            <Text style={homeStyle.preText}>\r\n                                                Comments:\r\n                                            </Text>\r\n                                            <Text style={homeStyle.btnText}>\r\n                                                Coming Soon!\r\n                                            </Text>\r\n                                        </TouchableOpacity>\r\n                                    </View>\r\n                                </View>\r\n                            </View>\r\n                            <View style={homeStyle.lowerWrapper}>\r\n                                    <View>\r\n                                        <Text style={homeStyle.trendingTitle}>\r\n                                            Popular, Latest Blogs and Topics\r\n                                        </Text>\r\n                                    </View>\r\n                                    <View>\r\n                                        <FlatList\r\n                                            data={blogs}\r\n                                            keyExtractor={(data, index) => index.toString()}\r\n                                            renderItem={({ item }) => <ExecuteCard data={item} navigation={navigation}\r\n                                            />}\r\n                                            numColumns = {windowWidth>800? 3: 2}\r\n                                        />\r\n                                    </View>\r\n                            </View>\r\n                        </View>\r\n                    </View>\r\n                        <BottomSide/>\r\n                    </View>\r\n                </ScrollView>\r\n            </View>\r\n    )\r\n}\r\n\r\nexport default MyBlogs\r\n","import React, {useEffect} from 'react'\r\nimport {NavigationContainer,useNavigation,DefaultTheme, DarkTheme} from '@react-navigation/native'\r\nimport {createStackNavigator} from '@react-navigation/stack'\r\nimport Home from './screens/home'\r\nimport Blogs from './screens/blogs'\r\nimport Subscription from './screens/subscription'\r\nimport NavigationBar from './components/navigation-bar'\r\nimport BlogRead from './screens/blog-read'\r\nimport linking from './screens/linker'\r\nimport { useTheme } from './utils/state-context'\r\nimport LoginScreen from './screens/login'\r\nimport NewPostMultiple from './screens/create-post'\r\nimport NewPostPreview from './screens/blog-preview'\r\nimport RegisterScreen from './screens/register-screen'\r\nimport MyBlogs from './screens/author-blogs'\r\n\r\n\r\nconst Stack = createStackNavigator()\r\n\r\nfunction AllStacks(){\r\n    const navigation = useNavigation()\r\n    return(\r\n        <Stack.Navigator\r\n        screenOptions={{\r\n            headerShown: true,\r\n            header:()=>{\r\n                return(\r\n                    <NavigationBar\r\n                    navigation={navigation}\r\n                    />\r\n                )\r\n            },\r\n        }}\r\n        >\r\n            <Stack.Screen name='Blogs' component={Blogs} />\r\n            <Stack.Screen name='Home' component={Home}/>\r\n            <Stack.Screen name='Subscription' component={Subscription} />\r\n            <Stack.Screen name='Register' component={RegisterScreen} />\r\n            <Stack.Screen name='Login' component={LoginScreen}/>\r\n            <Stack.Screen name='NewPost' component={NewPostMultiple}/>\r\n            <Stack.Screen name='Preview' component={NewPostPreview}/>\r\n            <Stack.Screen name='BlogRead' component={BlogRead} />\r\n            <Stack.Screen name='MyBlogs' component={MyBlogs}/>\r\n\r\n        </Stack.Navigator>\r\n    )\r\n}\r\n\r\nexport default function Navigation({colorScheme}){\r\n    const {setDarkTheme} = useTheme()\r\n    useEffect(()=>colorScheme === 'dark' ? setDarkTheme(false) : setDarkTheme(false))\r\n    return(\r\n        <NavigationContainer\r\n        linking={linking}\r\n        >\r\n            <AllStacks/>\r\n        </NavigationContainer>\r\n    )\r\n}\r\n","import Navigation from './lib/navigation'\nimport {useColorScheme} from 'react-native'\nimport { ColorThemeProvider } from './lib/utils/state-context'\n\nexport default function App() {\n  const colorScheme = useColorScheme()\n  return (\n    <ColorThemeProvider>\n      <Navigation colorScheme={colorScheme}/>\n    </ColorThemeProvider>\n  )\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.p = \"/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t179: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkweb\"] = self[\"webpackChunkweb\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [989], () => (__webpack_require__(6271)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["windowWidth","Dimensions","get","width","windowHeight","height","ThemeContext","createContext","ColorThemeProvider","_ref","children","_useState","useState","_useState2","_slicedToArray","setRoboFont","_useState3","_useState4","darkTheme","setDarkTheme","_useState5","_useState6","token","setToken","_useState7","_useState8","author","setAuthor","_useState9","_useState10","emailAccess","setEmailAccess","_useState11","_useState12","isFontsLoaded","setIsFontsLoaded","fetchFonts","_ref2","_asyncToGenerator","Font","loadAsync","require","apply","arguments","loadFonts","_ref3","error","console","checkToken","_ref4","window","localStorage","storedToken","getItem","storedAuthor","storedEmail","err","log","useEffect","_jsx","Provider","value","toggleTheme","prevTheme","useTheme","useContext","NavigationBarStyle","_useTheme3","roboFont","StyleSheet","create","wrapper","flexDirection","alignContent","alignItems","paddingHorizontal","paddingVertical","backgroundColor","color","boxShadow","titleWrapper","flexWrap","btnWrapper","btn","margin","borderRadius","btnLogin","justifyContent","dropdownMenu","position","top","right","zIndex","borderWidth","borderColor","dropdownMenuItem","padding","borderBottomWidth","borderBottomColor","dropdownMenuItemText","fontWeight","fontFamily","fontSize","divider","activeBtnLine","marginTop","title","btnText","activeBtnText","textLogin","LoginStyle","_useTheme4","topContainer","container","boxContainer","marginBottom","textContainer","textDesc","fontStyle","text","registerText","HomeStyle","_useTheme5","flex","trendingWrapper","latestText","trendingText","dateTimeWrapper","timeText","marginRight","dateText","contentTitle","contentTxt","trendingTitle","preText","BlogCardStyle","marginHorizontal","marginVertical","img","txt","BlogContentStyle","upperWrapper","lowerWrapper","bioWrapper","imgWrapper","imgContentWrapper","contentImg","imgCopyrightText","editorText","contentText","extendedBtn","extendText","loadText","baseUrl","baseUrlImage","_blog$owner","_blog$owner2","_blog$owner3","blog","dateObject","Date","created_at","year","getFullYear","month","getMonth","day","getDate","hours","getHours","minutes","getMinutes","expanded","setExpanded","blogContentStyle","content","story","selectedImages","contentImage","mergedContent","contentReadMore","i","Math","max","length","push","type","data","Text","FormData","append","id","sendLike","axios","post","then","response","alert","catch","sendDislike","_jsxs","View","style","TouchableOpacity","onPress","Feather","name","size","Ionicons","owner","owner_name","owner_description","_objectSpread","ceil","Image","source","uri","frontImage","imageCopyRight","map","item","index","media","_data$owner","styles","navigation","linkWarning","bottomSideStyle","paddingBottom","connectWrapper","linkWrapper","bottomContent","bottomLinkWrapper","bottomVerticalLine","titleSec","copyRight","bottomTitle","bottomLinkText","linkText","marginLeft","BottomSideStyle","Linking","openURL","MaterialCommunityIcons","setData","setBlog","allBlogs","setAllBlogs","setOwner","homeStyle","scrolledToTwoThirds","setScrolledToTwoThirds","fetchLatests","status","fetchMainBlog","JSON","stringify","SafeAreaView","ScrollView","showsVerticalScrollIndicator","onScroll","event","contentHeight","nativeEvent","contentSize","contentOffset","y","handleScroll","FlatList","keyExtractor","toString","renderItem","BlogCard","navigate","numColumns","_ref5","Spacer","BottomSide","blogsStyle","_useTheme6","starter","backgroundImage","resizeMode","overlay","absoluteFillObject","paddingLeft","paddingRight","titleText","BlogsStyle","ImageBackground","label","placeholder","lineNum","rest","_objectWithoutProperties","_excluded","formStyle","titleStyle","inputField","FormStyle","TextInput","numberOfLines","placeholderTextColor","multiline","credentialFormStyle","_useTheme2","CredentialFormStyle","username","setUsername","email","setEmail","subscriptionStyle","SubscriptionStyle","SubButton","_x","CredentialFormInput","onChangeText","keyboardType","DropdownMenu","options","navBarStyle","option","route","useRoute","btnTextWidth","setBtnTextWidth","onTextLayout","e","layout","showDropdown","setShowDropdown","dropdownOptions","removeItem","location","reload","replace","isActive","routeName","onLayout","scrollViewRef","useRef","blogReadStyle","BlogReadStyle","params","current","scrollTo","animated","ref","Blog","prefixes","config","screens","Blogs","BlogRead","Login","Register","Home","MyBlogs","radius","strokeWidth","progress","circumference","PI","offset","setOffset","Svg","Circle","cx","cy","r","fill","stroke","strokeDasharray","strokeDashoffset","loginStyle","password","setPassword","notification","setNotification","isProgress","setIsProgress","setProgress","_useTheme","interval","setInterval","prevProgress","clearInterval","LoginButton","setItem","goBack","secureTextEntry","CircularProgressIndicator","newMultipleStyle","_useTheme14","contentWrapper","otherWrapper","uploadButton","cursor","input","display","NewMultipleStyle","setTitle","file","setFile","setContent","setSelectedImages","setImageCopyRight","handleAddParagraph","concat","_toConsumableArray","handleFileChange","image","isMainImage","selectedFile","target","files","selectImages","result","ImagePicker","launchImageLibraryAsync","mediaTypes","Images","allowsEditing","aspect","quality","allowsMultipleSelection","canceled","ImageSelector","deleteStory","FormInput","htmlFor","accept","onChange","URL","createObjectURL","horizontal","assets","newImages","splice","deleteImage","updatedContent","handleParagraphChange","blogContentPreviewStyle","_useTheme16","BlogContentPreviewStyle","blogPreviewStyle","_useTheme15","BlogPreviewStyle","_route$params","forEach","section","mimeTypeMatch","match","fetch","blob","filename","split","pop","message","_x2","postBlog","headers","Authorization","PreviewBlogContent","description","setDescription","_useState13","_useState14","RegisterButton","formData","deleteBlog","delete","blogs","setBlogs","fetchStatistics","fetchBlogs","total_views","likes","dislikes","ExecuteCard","Stack","createStackNavigator","AllStacks","useNavigation","Navigator","screenOptions","headerShown","header","NavigationBar","Screen","component","Subscription","RegisterScreen","LoginScreen","NewPostMultiple","NewPostPreview","Navigation","colorScheme","NavigationContainer","linking","App","useColorScheme","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","call","m","deferred","O","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","Object","keys","every","key","n","getter","__esModule","d","a","definition","o","defineProperty","enumerable","g","globalThis","this","Function","obj","prop","prototype","hasOwnProperty","Symbol","toStringTag","p","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}